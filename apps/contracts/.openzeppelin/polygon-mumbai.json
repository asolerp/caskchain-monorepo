{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x57ABdf29998E7ad773AF26F158c06A6DDb391253",
      "txHash": "0x8e658989dcaeb42c90d7913352d822bd3b91e1f10dda98fa45c2535044374dab",
      "kind": "uups"
    },
    {
      "address": "0x67A8D04bf2B534d40ceEDc5Be8186EB8E97688C0",
      "txHash": "0x92d42c539444d9db5a1023adc11a1df9f2d3963a7dd845c7308a384b472da67a",
      "kind": "uups"
    },
    {
      "address": "0xad9118ac5785301A63a982EDFE8b9Ba18E654E78",
      "txHash": "0xd0a093e91c3f9c333c021568cc3819972f9c86108535ba68a6042cba1b3f506a",
      "kind": "uups"
    },
    {
      "address": "0xE021144fD56C9d52Aab6b9855473009e8AC8F2f9",
      "txHash": "0x46d1059c44c99adb0534e08f8cb93b6b9ca6925d5e4a77ef22efb7cf3ac2475e",
      "kind": "uups"
    },
    {
      "address": "0x8f671d4e938a783fF5822d506DCDc00Be609F836",
      "txHash": "0x0f38dffb67f9ea0f4d21c92fe6b65f5a4bafb87ac5ffbbb68eddb91e44233f75",
      "kind": "uups"
    },
    {
      "address": "0xF5BF7b78aAe89544C3773a1D783c55c0ddb4991d",
      "txHash": "0x65015eed08222118494618aa128e6207b28a6d8b1101af557284c80f1cf02ae6",
      "kind": "uups"
    },
    {
      "address": "0x8A8b9e5f298A2A6C3BC13775A3B995dF6845ebcA",
      "txHash": "0xb69f545a29ecc599e53b9203e0ad53bc6926dda98327e4385903faf13c7ef244",
      "kind": "uups"
    },
    {
      "address": "0xfbb110Ad42Fd7b16e19B57005dCFC2b223B44C60",
      "txHash": "0x4d84ace2795036e2cd9a957f371225a781ebb5e2591c291909b512c307a4cd0c",
      "kind": "uups"
    },
    {
      "address": "0xDCB9E8e0689eDB220F74223d899D99f04D166542",
      "txHash": "0x1db1863503f63e5837a9739490acab06b4bac7700342be8979ef7bab31713408",
      "kind": "uups"
    },
    {
      "address": "0x49B6527F5A92db39C07ceeF331235bCCefa29F75",
      "txHash": "0x26cd6307f4e18597b6719036e3194e6099bd739f54086d390b2d491c65495211",
      "kind": "uups"
    },
    {
      "address": "0xdA85d718BaA79866E3E5e1c61f453B33A0fb336A",
      "txHash": "0xd7063579ce15337f30eb8c2b784d739e72ad077b3340b679b5cc4b0ead86305c",
      "kind": "uups"
    },
    {
      "address": "0x89E70757b6C08644dD081A861DebBe38827A13C6",
      "txHash": "0x0d0dd3289dbf3334f2e58367d29ef4fe18cf69c80171d2893fe2eb83da757deb",
      "kind": "uups"
    },
    {
      "address": "0x7C6e78BCb65A13Ea5bAddDD2750f0031819453a2",
      "txHash": "0xd028f3e9fe622328f152624c19a09a610419e8b85d8087610801a60868161b4e",
      "kind": "uups"
    },
    {
      "address": "0xF302495919167d5C79dCe2602b7e55aB953155Aa",
      "txHash": "0x5ff20698ad375684dc97b047ed0c5ab0f30d12dcefa0446fb521bcacbe6eca5e",
      "kind": "uups"
    },
    {
      "address": "0x4FCb13eB387e053b63f957e4252a8Bf531199675",
      "txHash": "0xc45b6e0ec0ec205b62fdba0e6d955b865597abbf5087d7db68032a5a6b0e5fb7",
      "kind": "uups"
    },
    {
      "address": "0xc382Ed22B0AFb29d8329167380E374AD1E05e64c",
      "txHash": "0x4fabc1da9a3c3e315ebdc8c68425440171522ce59453233889aca4b5c1612a5c",
      "kind": "uups"
    },
    {
      "address": "0xA6DE3615E97d94CD877436d3e1bEFBc871435d56",
      "txHash": "0xd36e30fc20ec186a030ee6bb1c7ef9c9a56661db8e2e53ccc354ec0c2049f1df",
      "kind": "uups"
    },
    {
      "address": "0xb73a919AFFc213b50bBA866984a008DFaDE08434",
      "txHash": "0xfb179e823a126b75c2bee895ee8d3579b41ac30e15acfa0545e682d978750fd3",
      "kind": "uups"
    },
    {
      "address": "0x42c34d7fc1Adb060aF5185bb8CceE530f5Efdeb3",
      "txHash": "0x4c447b036b7c456af6b1c5d32a9e28a633a6836628247f872eb8964df6bf4744",
      "kind": "uups"
    },
    {
      "address": "0x430B4010F61835F48f57fBBdC342DCe0e1ffeCfC",
      "txHash": "0x763e6fcfc15927aa59e0d460fb61e9316383045f0a2326fa6a3de7080bf70618",
      "kind": "uups"
    }
  ],
  "impls": {
    "5bdb0cca76efc74c46bc6219343002756cbcfa42349e6adae8c1c115b349713d": {
      "address": "0xE09C059fBC95fC2d389c0694152e94e0981c8d44",
      "txHash": "0x1d7da51a9faf6278d099f7a1b3dec4f8aeabd6de09c03321b3964112fb53d96a",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)3417_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3417_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CCNft",
            "label": "txFeeToken",
            "type": "t_address",
            "src": "../project:/contracts/CCNft/CCNft.sol:36"
          },
          {
            "contract": "CCNft",
            "label": "_storage",
            "type": "t_contract(ICCNftStorage)10714",
            "src": "../project:/contracts/CCNft/CCNft.sol:37"
          },
          {
            "contract": "CCNft",
            "label": "_tokenIds",
            "type": "t_struct(Counter)3938_storage",
            "src": "../project:/contracts/CCNft/CCNft.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(ICCNftStorage)10714": {
            "label": "contract ICCNftStorage"
          },
          "t_struct(Counter)3938_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(RoyaltyInfo)3417_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)3417_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "086d0080f5661c91c9e88f0647b72b2f1f9951294d9aaa7ec18831b70526b56b": {
      "address": "0xDA2cC9EddF0c3d03E6CB363043d4CEd1E51E3d0A",
      "txHash": "0x78a510e3a193ee9ec4093cd8f4341c88d0fccd288d04ff6e8f10e34350d5dbd1",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "NftVendorStorage",
            "label": "collection",
            "type": "t_address",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:15"
          },
          {
            "contract": "NftVendorStorage",
            "label": "creator",
            "type": "t_address",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:16"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_allListedNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:17"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_allERC20Tokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:18"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_listedItems",
            "type": "t_struct(Counter)3938_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:20"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_listings",
            "type": "t_mapping(t_uint256,t_struct(Listing)14767_storage)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:22"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_proceeds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:23"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:25"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_excludedList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:27"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_acceptedTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:29"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_priceTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)3417_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3417_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(RoyaltyInfo)3417_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)3417_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_struct(Counter)3938_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Listing)14767_storage)": {
            "label": "mapping(uint256 => struct NftVendorStorage.Listing)"
          },
          "t_struct(Listing)14767_storage": {
            "label": "struct NftVendorStorage.Listing",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "25687175fcd3083083c022b5aead60f6496392f98079d387884c1ef97a2f3e50": {
      "address": "0x1265A3BC7B9183Aa9c08C7B13E6427bfd25B7596",
      "txHash": "0xc583fd1b0c2e35fec6aa76d5dfaee5ccb584bdb4612b57cacf730dfd1ad6ef3c",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "NftOffers",
            "label": "collection",
            "type": "t_address",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:30"
          },
          {
            "contract": "NftOffers",
            "label": "nftVendor",
            "type": "t_contract(NftVendor)14753",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:32"
          },
          {
            "contract": "NftOffers",
            "label": "_ccNftStorage",
            "type": "t_contract(ICCNftStorage)10714",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:33"
          },
          {
            "contract": "NftOffers",
            "label": "_nftOffersStorage",
            "type": "t_contract(INftOffersStorage)12225",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(NftVendor)14753": {
            "label": "contract NftVendor"
          },
          "t_contract(ICCNftStorage)10714": {
            "label": "contract ICCNftStorage"
          },
          "t_contract(INftOffersStorage)12225": {
            "label": "contract INftOffersStorage"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6c6094d7f18a2124857aebeb6c7bb1a4cb8b7b9aaf645e774d91fe108ab271cc": {
      "address": "0x90dC5C7984a00e35B2904F9c56B5dc2C90Ef34d0",
      "txHash": "0x4ef65aa39f692505b1c6176ee724480d606d58a7b00c8bfcf4ec01f5729d174f",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "NftFractionsStorage",
            "label": "tokens",
            "type": "t_mapping(t_address,t_struct(TokenPaymentInfo)11685_storage)",
            "src": "../project:/contracts/NftFractions/NftFractionsStorage.sol:16"
          },
          {
            "contract": "NftFractionsStorage",
            "label": "activeAddressVendor",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/NftFractions/NftFractionsStorage.sol:17"
          },
          {
            "contract": "NftFractionsStorage",
            "label": "vaultCount",
            "type": "t_uint256",
            "src": "../project:/contracts/NftFractions/NftFractionsStorage.sol:20"
          },
          {
            "contract": "NftFractionsStorage",
            "label": "tokenAddressCreated",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/NftFractions/NftFractionsStorage.sol:21"
          },
          {
            "contract": "NftFractionsStorage",
            "label": "vaults",
            "type": "t_mapping(t_uint256,t_struct(Vault)11676_storage)",
            "src": "../project:/contracts/NftFractions/NftFractionsStorage.sol:24"
          },
          {
            "contract": "NftFractionsStorage",
            "label": "nftToVault",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "../project:/contracts/NftFractions/NftFractionsStorage.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "NftFractionsFactory",
            "label": "logic",
            "type": "t_address",
            "src": "../project:/contracts/NftFractions/NftFractionsFactory.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_struct(TokenPaymentInfo)11685_storage)": {
            "label": "mapping(address => struct NftFractionsStorage.TokenPaymentInfo)"
          },
          "t_struct(TokenPaymentInfo)11685_storage": {
            "label": "struct NftFractionsStorage.TokenPaymentInfo",
            "members": [
              {
                "label": "tokenAddress",
                "type": "t_address"
              },
              {
                "label": "totalSupply",
                "type": "t_uint256"
              },
              {
                "label": "listingPrice",
                "type": "t_uint256"
              },
              {
                "label": "enableSell",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_struct(Vault)11676_storage)": {
            "label": "mapping(uint256 => struct NftFractionsStorage.Vault)"
          },
          "t_struct(Vault)11676_storage": {
            "label": "struct NftFractionsStorage.Vault",
            "members": [
              {
                "label": "vaultAddress",
                "type": "t_address"
              },
              {
                "label": "count",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          }
        }
      }
    },
    "1f4ea5e09beec392deae5f65a0b188b15e1ffc4724e9cfa0cc88bdf99ac86f52": {
      "address": "0x282bBd19935772F5253AA448f7F892c047D4e03F",
      "txHash": "0xd6f5bf7c5b74e7de9e065c3c580275411ce909445bf717c63cb91115afe52d8e",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "NftFractionsStorage",
            "label": "tokens",
            "type": "t_mapping(t_address,t_struct(TokenPaymentInfo)11685_storage)",
            "src": "../project:/contracts/NftFractions/NftFractionsStorage.sol:16"
          },
          {
            "contract": "NftFractionsStorage",
            "label": "activeAddressVendor",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/NftFractions/NftFractionsStorage.sol:17"
          },
          {
            "contract": "NftFractionsStorage",
            "label": "vaultCount",
            "type": "t_uint256",
            "src": "../project:/contracts/NftFractions/NftFractionsStorage.sol:20"
          },
          {
            "contract": "NftFractionsStorage",
            "label": "tokenAddressCreated",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/NftFractions/NftFractionsStorage.sol:21"
          },
          {
            "contract": "NftFractionsStorage",
            "label": "vaults",
            "type": "t_mapping(t_uint256,t_struct(Vault)11676_storage)",
            "src": "../project:/contracts/NftFractions/NftFractionsStorage.sol:24"
          },
          {
            "contract": "NftFractionsStorage",
            "label": "nftToVault",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "../project:/contracts/NftFractions/NftFractionsStorage.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(TokenPaymentInfo)11685_storage)": {
            "label": "mapping(address => struct NftFractionsStorage.TokenPaymentInfo)"
          },
          "t_struct(TokenPaymentInfo)11685_storage": {
            "label": "struct NftFractionsStorage.TokenPaymentInfo",
            "members": [
              {
                "label": "tokenAddress",
                "type": "t_address"
              },
              {
                "label": "totalSupply",
                "type": "t_uint256"
              },
              {
                "label": "listingPrice",
                "type": "t_uint256"
              },
              {
                "label": "enableSell",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_struct(Vault)11676_storage)": {
            "label": "mapping(uint256 => struct NftFractionsStorage.Vault)"
          },
          "t_struct(Vault)11676_storage": {
            "label": "struct NftFractionsStorage.Vault",
            "members": [
              {
                "label": "vaultAddress",
                "type": "t_address"
              },
              {
                "label": "count",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          }
        }
      }
    },
    "8da4a904bfb18624f53c3c1a11a7214946dc5c38bb9758a554e8c5b1afb769b7": {
      "address": "0xEeff3a81B5F41355deD52912091fcbE677f3DcbC",
      "txHash": "0x3a55b62f9a2d0789a5f00b5c65521d3cb7082667dc9a5be195d0cddf07f6fa8a",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)3417_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3417_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CCNft",
            "label": "txFeeToken",
            "type": "t_address",
            "src": "../project:/contracts/CCNft/CCNft.sol:36"
          },
          {
            "contract": "CCNft",
            "label": "_storage",
            "type": "t_contract(ICCNftStorage)10772",
            "src": "../project:/contracts/CCNft/CCNft.sol:37"
          },
          {
            "contract": "CCNft",
            "label": "_tokenIds",
            "type": "t_struct(Counter)3938_storage",
            "src": "../project:/contracts/CCNft/CCNft.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(ICCNftStorage)10772": {
            "label": "contract ICCNftStorage"
          },
          "t_struct(Counter)3938_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(RoyaltyInfo)3417_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)3417_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    }
  }
}
