{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xD2eBCe53af15A0Ddf7AEE7d42B2857097755a666",
      "txHash": "0x118d99f375e2bc88b87611c33b081d13ff3654b95f46aad4070eb3a57ad52b2f",
      "kind": "uups"
    },
    {
      "address": "0x0C95c5B70BFFf980769f20de6Ee389F2a8De1344",
      "txHash": "0x6188d5dfacbdfdba6aaf2652ff2ea2bcf24ca7940d133a9b8e0430737e135996",
      "kind": "uups"
    },
    {
      "address": "0x9666e73A66B6E10EE6C8f2071FCc6f96a2B551bd",
      "txHash": "0x2975f1ac5ccf398eb87c598ceadf0352579af5af2785f403b5d1399f5d1c8199",
      "kind": "uups"
    },
    {
      "address": "0x570c7fFA45570DbB5b538446123D16Ac8AE253Be",
      "txHash": "0x6cae3730b721f3c0627017b67d066da8fc2e60dbae61c49f49b2edba8b927cd3",
      "kind": "uups"
    },
    {
      "address": "0x67Ba01193177B459Fcb84b956F8c6b79c4859dA7",
      "txHash": "0x799a770275c308a47738704f02bd1b23a2e31322645ff610fa777529a01e9641",
      "kind": "uups"
    },
    {
      "address": "0x7501AcCc5C85Ce7420B5D2e1cF70F34b43835835",
      "txHash": "0x684edc36a69fa8fdce835d4f537f4845958175afc1e436f185fc7dea41b4def1",
      "kind": "uups"
    },
    {
      "address": "0xEa1b971dC98B6Cdb20493d90a8c3169fAD19219f",
      "txHash": "0x7bf62c08c55cbb78ae02711ab22df23d27e788a3efae6591f1cad06ca98171b1",
      "kind": "uups"
    },
    {
      "address": "0x02081670d68C4a80CEDa3327f502abD1a661D1Bf",
      "txHash": "0x1a705d57dd57fa4a6aba0c101c61063b15338693769945268e5c7d563762f6e0",
      "kind": "uups"
    },
    {
      "address": "0xf62C77902CF095D65293e13fcF536C48ccfA48AA",
      "txHash": "0x3370e3325d49c1eb7cd6beecec1907f80cfc12a1ec055651d403918de7d6e4b8",
      "kind": "uups"
    },
    {
      "address": "0x6bfEA8e30757547D3E54A99fE9EAE9bd12060bf6",
      "txHash": "0x235969436750498ef4b8285756ec5efba10a28c828953e1f5f4d7e6f7572e5ef",
      "kind": "uups"
    },
    {
      "address": "0x8C1ad7751548B6596F5381ff0cBccF28c716B990",
      "txHash": "0x8dee772e36f39174f8f29e4cbef3371f58805a19a782312dfd9fe68b277b0226",
      "kind": "uups"
    },
    {
      "address": "0xbf50106941D6AA71D707EeCa3BF39866a10070e4",
      "txHash": "0x2fc7ad7b2e9ae93d088da0834e34d96d4d42f8b8e8c70ffff036c50324d9859c",
      "kind": "uups"
    },
    {
      "address": "0xDaA1C8dE138F16A34BE1C9CD5784D433D488F373",
      "txHash": "0x026da89dae41f787c7d4efba389f9b3cd7195f3ea71bccf4569c86747080e006",
      "kind": "uups"
    },
    {
      "address": "0x73d0CA2435c28E9524b2FAE096795518d7c223Ec",
      "txHash": "0x0bb60c7c041f260092dd5e897c1d0689f9401d0e30977821ee1e3696a366472d",
      "kind": "uups"
    },
    {
      "address": "0xc4b6725A244b91062c59cd9A9C7b28f06e93ad6D",
      "txHash": "0x3e1d78bd2ca82aa10bb856392b54c432e546547321ddc02408f8349e54fcd29e",
      "kind": "uups"
    },
    {
      "address": "0x22276654FBf1AAAFB72029410b5125239eeD4644",
      "txHash": "0x95166b299c5deec34ed88618e3332cfbaec71108ba81e7200d1b2f3bdf7dffd4",
      "kind": "uups"
    },
    {
      "address": "0x4718b246F4807F21365e527e75896726b76506Cf",
      "txHash": "0x55f135436aa266ea8ec344b50a5f519548dad3ca2d481ccb56c399f17c40f550",
      "kind": "uups"
    },
    {
      "address": "0x0732347FA071152C64124ed7e8F07bcb8f08ed26",
      "txHash": "0x5f87604dca88fc279b136121f7b0940052e1b5ceef7b559b8850f1bf0311b523",
      "kind": "uups"
    },
    {
      "address": "0x80dEd4Fb7bCdc7020AF020c6F89bf62C67FD717a",
      "txHash": "0x5bf5741ce3e8b31e6bb061664d982262b3c9ca6dc54801aeb1e6f9680ae263d0",
      "kind": "uups"
    },
    {
      "address": "0x9B4186ac539F5103a695bCEe3E5E714373693818",
      "txHash": "0x76ba323a9d0e5a0ac8ddd3503e79230d4613bcacaea3726dbe5d0523f659ea17",
      "kind": "uups"
    },
    {
      "address": "0xFd5a833419d7B91c88D99Ae2439C4deF3229BbaF",
      "txHash": "0x797416ce1a1169f9167b5a23d24f382b74bae5bc5ce518a4effebd8304f1b511",
      "kind": "uups"
    },
    {
      "address": "0xFCde2A4Ed4362A351Af11c0816D8E2cE82Fb0019",
      "txHash": "0x26f73337a1724a9eaed5c782f5d087ba13c732536e1519f05753195ff629a28a",
      "kind": "uups"
    },
    {
      "address": "0x185Ce775200C2C166d8cf329D5DA9c4759bA85de",
      "txHash": "0x125c438a73a444a42d18a833526fe6856e523a33570e2daf8eaac69006354466",
      "kind": "uups"
    },
    {
      "address": "0x212f66E31ADec51f9a8c3E53e76b34d9A11158D9",
      "txHash": "0xb4b34e5a6db76ea5703eb1baf45b4c585d8dd8a216a0e68f999a74e5287373fe",
      "kind": "uups"
    },
    {
      "address": "0xB17c589341a575574c55374BA10f912B6Be29794",
      "txHash": "0x787cb205e576382c0bc56888c5f300472ab10d36d8210f865ab72ae524d3dbeb",
      "kind": "uups"
    },
    {
      "address": "0xA2767BB163687d48b79cB57F2042B22Fa4bb714C",
      "txHash": "0x34c6b8272c2f194a843d6c4f5b90e3a23cf2d5f7978fb6a02a5cc37877c4cc64",
      "kind": "uups"
    },
    {
      "address": "0xB1D582f9cBB153b64D4bf7D4FaA43EE49a71Ff11",
      "txHash": "0x2f96a74b4bb130f3041a6d3e0348b3e1a55124a0c29e9157b787aff1db7fb9a3",
      "kind": "uups"
    },
    {
      "address": "0x0ea9691FF0B0c3405375BC767737B7CcBAb005d6",
      "txHash": "0x044db265b96f4690e3db22c5e107b40a718013413552f2142e43a409b09505f2",
      "kind": "uups"
    },
    {
      "address": "0x260C8F10A3845C6e774c70601dce5f567c01b8B5",
      "txHash": "0x3c253f23c1487505b877002972599bfed683c608225ac45b4516af7db0c9b789",
      "kind": "uups"
    },
    {
      "address": "0x8b1E58533b09A35BD4b644C911E083CDd8D82b7c",
      "txHash": "0xf4ddfc483c949f544179cd219609ae12564a527e1ae2a76b7d626151e965b8e3",
      "kind": "uups"
    },
    {
      "address": "0xAfd333dD62318611A26ef957aE92435a6239fe63",
      "txHash": "0x431292bbe0da4f9e74a807fe389710fb4a6daa9da6608d88f2e089ba70544ca5",
      "kind": "uups"
    },
    {
      "address": "0xB9BfE123864309a76f07723afb64D3Ec4bBb5be8",
      "txHash": "0x2006992723b558cd1a2196f3a7533536ad0b4e9d43d51f52afa7609035796111",
      "kind": "uups"
    },
    {
      "address": "0x8DF8b6D9608E67B6acC8464E3aCC060253AEDc30",
      "txHash": "0xf6e405272bf1865c72f041ecfd6e3c9562717133646c60e71a59ba93f7188669",
      "kind": "uups"
    },
    {
      "address": "0x1b0bB56B622F596486c58B85d28b8977c5075416",
      "txHash": "0xc04968e2bc1623b10af6338577bf842b8de8dcb9fc1b4548776c8c2327b3b968",
      "kind": "uups"
    },
    {
      "address": "0xf6c8612f18009b43DBD41e6098C7e3F7C8Cbc5C8",
      "txHash": "0x19e1a748ff855fb4d622fb4ce186da76a0d3b056a590764271cb6157d830ff14",
      "kind": "uups"
    },
    {
      "address": "0x29cfD9a99a61D49bC2fe13A2a4F19276C321c007",
      "txHash": "0x2bd6cb9a1692f00de73767d9952764303224e19d8623a5ca1e02471a42ba1bf2",
      "kind": "uups"
    },
    {
      "address": "0xAdc131211A34d7548401324435d6F3F3DCf2875F",
      "txHash": "0x8da8f2000628d9443c79c7c8561906520b31f998be71f96645e2d5fb8acfaebc",
      "kind": "uups"
    },
    {
      "address": "0x4Fa8a5A1c9872fb1af4D4DD2C2859bF682A75865",
      "txHash": "0xd2fdd93136d15fafd5d566f1906bd2a817b8f75d2f4ee761fc2c77c5dc3ba5ca",
      "kind": "uups"
    },
    {
      "address": "0x452E286BaC46Cb2f5d141f2670d1aFE76ba37688",
      "txHash": "0x6dfa85fe64fdc4af12dbf093ce51c7bc0cf1c4d34bcd19b876adef8bbbe654f5",
      "kind": "uups"
    },
    {
      "address": "0x84f7e7abA0128421c65301cE0d49241f2914E694",
      "txHash": "0x1de829af029d0f508b04a71f40c2967478c0c8e9f537646c5f7114abb2fe748c",
      "kind": "uups"
    },
    {
      "address": "0x03006883b2F0F6015f8F3Cdbf46d4b2C36A2fD27",
      "txHash": "0x9fe15b0716aca3e517212c09ca3a77284d08079180559ddd9f2b6da21c315216",
      "kind": "uups"
    },
    {
      "address": "0x1092b29bc33E53eb77Dc9c8B7E56970A511FB8CB",
      "txHash": "0x5042d261ce4dd6c01705af985c80e864d2ec2fcff5d0aa74b448b4d2e8e279a6",
      "kind": "uups"
    },
    {
      "address": "0x4a22Cf3B525dD735bAb120A166985a59aA7f0E0d",
      "txHash": "0x3d94e76298cf5eebcb77008ebaf7650070f681f8b8816d5e8467060a6573cc69",
      "kind": "uups"
    },
    {
      "address": "0xA9baB1a3C7099e1EBE1991269cc85e9B6c66a31a",
      "txHash": "0x755a7a713d6445f860b374f3ff40625750b9314bc5c5da022e44525ac02d37aa",
      "kind": "uups"
    },
    {
      "address": "0xF543e16bd60629d2d168758e91Bf124e26b7db6b",
      "txHash": "0xbf5fcfecbb46b6cad22320ab2a69ccba843636aec9d59f2619287751bda777cc",
      "kind": "uups"
    },
    {
      "address": "0xac63D6E3adb9Ff017c49538c8a6Eeb9494Dc4Ada",
      "txHash": "0x4927d827e25ec2225ff22c75e8fa39af148227d06cbad9982e1145df532d81e6",
      "kind": "uups"
    },
    {
      "address": "0x8553a0B3E1C484ea6D3B645110611C6Ea962FB80",
      "txHash": "0xd4158459863588d48dee41e6f4d61a72121862fb19c30216df78fe74add1fbdf",
      "kind": "uups"
    },
    {
      "address": "0xC192Cef596c22A3786022B4795352750464d6202",
      "txHash": "0xcbdd9232b53181d4ace9568583505d9944c484b28862a7b668b9e811cd0a0c9f",
      "kind": "uups"
    },
    {
      "address": "0xD9BD277B2138BFbdB42E5bc7a61E356352FCf7E7",
      "txHash": "0x15c009c57c2564996be28c418dd802b97240626f5f88227c5ea3dc9448d5483d",
      "kind": "uups"
    },
    {
      "address": "0x8D9cA494b9950B2Fb13b0e9ce643f493B4C81eF7",
      "txHash": "0xec2051ed5922bbff53c0cd46b71f9d51fc2d9f1c4253c0f0bc3ae76890b3b0e0",
      "kind": "uups"
    },
    {
      "address": "0xf5e2bA9b9B50b6781aeDBc6de640e745f3FC76D5",
      "txHash": "0xbae6be18e5811d5acd457ba1378a67839d7ff383f0a5647c186714f56bb978a0",
      "kind": "uups"
    },
    {
      "address": "0xa6dAc1e4624CC8413Cf9a4f5EA41c136C92a01C6",
      "txHash": "0x208abcd242419944865e969d66b5a54769b59fe69d148fbccae138abc0232637",
      "kind": "uups"
    },
    {
      "address": "0x8B41129DaCD3977eA7d35f8c51033370881133c0",
      "txHash": "0x808880f0533a82529b20862f264e1a89fd98e3833f161c7ed4168c4e2b2877f7",
      "kind": "uups"
    },
    {
      "address": "0x4727ab52C42A583c89846fC8ef95d7ae69f698CB",
      "txHash": "0x3973de11078c8bda31813c633b0683c950b1f0117c0cb02b82bdad39543e87c5",
      "kind": "uups"
    },
    {
      "address": "0x74C3bFDF6Ff0Ca668F0aA335cCeEA1Af7271D2Be",
      "txHash": "0x95d9fb42e52b3c19f18390dd2e3692c929b4e1e2f6a8b1c0de92478094691f8e",
      "kind": "uups"
    },
    {
      "address": "0x6b801e8c61Ae40dfB93FE66C6640eBED4395a753",
      "txHash": "0xbf897ea04d9ce2b243e35dec15e6c06dc0a0403a8c6324b82ccc9896f0aa398f",
      "kind": "uups"
    },
    {
      "address": "0xf37BBF81F798A236990D10Af5b33381978Bd0595",
      "txHash": "0xc584f3e9cc3efa96adbc0bcdb21b372371b7144da2630d40be89433cdadeec8a",
      "kind": "uups"
    },
    {
      "address": "0xE7d553740Be92ec7FB406d91Cc98094F4faf02e2",
      "txHash": "0x543ba525c1379c67694b42b889ea04f0736bf763c263633b397cc3b98813a575",
      "kind": "uups"
    },
    {
      "address": "0xae35b6b4030e42bC49C69Cab873e983Df528D369",
      "txHash": "0x3f29e4e26d4abfa203c0c16d2e8c5ae4b03132dbdc57f2da7ecb43c39ee3c51e",
      "kind": "uups"
    },
    {
      "address": "0xba65643D4715008beD9A637e4E5d1f18524eB22F",
      "txHash": "0x237a3d1579ccf21e05a335ba3cd178a7b7efe1652c8352c6bf3bd1510df87844",
      "kind": "uups"
    },
    {
      "address": "0xbC068D8e0C6f2B217e86BB03977Aa2b3A3E0a583",
      "txHash": "0x2d359c89578de2ef43f4e332d9f2be0e8d75c8592d91f664561e1f33a95c81e7",
      "kind": "uups"
    },
    {
      "address": "0x541e5F65065506DAbeFC5eb50192Da8448cA7bBb",
      "txHash": "0x35ae1f2742bc70c8962535091d4116f787756f3d2a256bd77bdfd99fde4a85c7",
      "kind": "uups"
    },
    {
      "address": "0x3fbC20dab2102303577cDCED2FCbc4C91FE8e5ac",
      "txHash": "0xd4c53e53fa8933ab75e50c0fec5a6a5e3fdb52c2fabaf42cbb4b248e0b936b4d",
      "kind": "uups"
    },
    {
      "address": "0x6C429A92913Db99876115A0CE7c8fF81BE5cF5A5",
      "txHash": "0x3cc30cdf54e6d85284c5faa08fac9a75c5b141777bee1a09c31ebb3132e058e6",
      "kind": "uups"
    },
    {
      "address": "0x31458F797d00B4220aB1d9Fbd6421DE84050d16b",
      "txHash": "0x58bda6c6a8bffb42491e0719c485546698661d6ab071575c6bd4529e23729d1f",
      "kind": "uups"
    },
    {
      "address": "0xeB26E4d0E1cf86AF43Ab9dA08Fa65037Fe305beC",
      "txHash": "0xd3fb32d6542990a7578840f99e113373b8772633f442a103c5beb3ca996cb4e5",
      "kind": "uups"
    },
    {
      "address": "0xF9b1bCb40712d42fb51fE3c3fdEEa530a3296fA0",
      "txHash": "0x3057c425583182cfafbd92e82bbbf56d67180661137d2242c7b1704bd2d9845f",
      "kind": "uups"
    },
    {
      "address": "0xA0B756202c7FEE442477A91DFA6A5B2adBC02827",
      "txHash": "0xbecfdb112a0e8da735caba69cb77e092536a95672520d6bde97c559b40757a53",
      "kind": "uups"
    },
    {
      "address": "0x9AAb75B395Be13bd593EbA1d21d7aE832D29045C",
      "txHash": "0xdf88d6eb4fec913eaf1b91dbaee5859cc959d1aadf26408e6c74a38321f34e9f",
      "kind": "uups"
    },
    {
      "address": "0x45FC8203793d4C361F01163192564192bF44eEB2",
      "txHash": "0x30d7d30fc29acac52acc91758d1c5f2fc404b8d255cc2c3d22971a1c61cae7d6",
      "kind": "uups"
    },
    {
      "address": "0xD58c5530879a7F54BC2882fd2E1F46Ff8ce3F252",
      "txHash": "0xa261d4f25788f268383ca8f017de58110a37a321f52138741f951807e498a655",
      "kind": "uups"
    },
    {
      "address": "0xe4db1d05AF617a1ac22CdEA8FA9259e1C264A6aD",
      "txHash": "0x7756c782c854e6d9f73c322830112e21042976cdb7b10e67c3a4d49ad9007d38",
      "kind": "uups"
    },
    {
      "address": "0xF832Bac979B260b5a9664aC2F7e19706EBB9f2e9",
      "txHash": "0xcf0de1f85da5994a2240b1553e64d19b85547708e0d85ac185709f9de5d609a5",
      "kind": "uups"
    },
    {
      "address": "0x9a285e0ffFdEB7711c24e67D0821F07131a3fE92",
      "txHash": "0xb574631cf39f6f9a31e6650d8e0b664f6ca5f9e2c99fe2c29cd8f7464128b60c",
      "kind": "uups"
    },
    {
      "address": "0x3f3eA2CBc0F3da55dAEfC0275b4bCB58aDDEED97",
      "txHash": "0xb4dd39d308e8a98532ece10d211b198f0b37d7addd76587a4dcb9b9e92a6f8cc",
      "kind": "uups"
    },
    {
      "address": "0x0D036F58153E880278853f01dc255bf4F98CD96c",
      "txHash": "0xb685c68bd76a7550d47f395b7fc52bed3a6d20ca52f06ceab5f3958740429db8",
      "kind": "uups"
    },
    {
      "address": "0x0836EdC18Cf326Ab8B259ed2794F196beE12C566",
      "txHash": "0x1fedbe45c06656faa363f7bd2ee6516773c96abcbf8fc5bd4fb1aba4bfa7511a",
      "kind": "uups"
    },
    {
      "address": "0x4090CddC37Af1e8700A90cEF85840077b0C18Ba1",
      "txHash": "0x45e3bede9e02921fff4e336a1c20bda711c52972cfcbad732b2e90a90b109a17",
      "kind": "uups"
    },
    {
      "address": "0x3D80e22e2A20f894012D0af1a2F071096Fa8Aff7",
      "txHash": "0x8f57119942054583db10ed14ea7fd6eda88fe735c730ab00fff9d7cd3ed2f44b",
      "kind": "uups"
    },
    {
      "address": "0xd6C3f8be837E98273E634d8c52A1e019BE648d3A",
      "txHash": "0xf4a7c394c6485b10345649f2dc7a45e87a83f4fd326ad3c9f1e35c7d1ce40a6f",
      "kind": "uups"
    },
    {
      "address": "0x46C0c11A0D9c5dCFfB419FD2f6A56c988efa4Da8",
      "txHash": "0x857cab2558b3568b21711d24491a2506a15a6f280f60ece6d05723053e4a405c",
      "kind": "uups"
    },
    {
      "address": "0xeD61D4B1380a88E241f67e9fa224173a738ef82c",
      "txHash": "0xfbeb4617747b3136b764c791848bffcb9600d839c13d64803dca958260bd2969",
      "kind": "uups"
    },
    {
      "address": "0x6a7491d53D2bBC38B05CbA8908Aa5c6a74BE1362",
      "txHash": "0xa6810c1f48d8cc2f399a7a6b9182fb2590604ce522c176f29b5d6cc6c2808748",
      "kind": "uups"
    },
    {
      "address": "0x36222FC6776EA0c1E885E4c424EDaEA29454776E",
      "txHash": "0x9dd4d91c711ddf2cdc3bc723773cf488180a1334a02c4a7364c3df5a382a1e78",
      "kind": "uups"
    },
    {
      "address": "0x820d2dbabFFa6Af234Cd098d83c8b25956fEAAE5",
      "txHash": "0x4b18cdb591f81054bd1d807267373f077976f0825bc1f918e4b97a047c056e87",
      "kind": "uups"
    },
    {
      "address": "0x479831b7ECBd5Ed585f555d85BE0A7bA28BCbA65",
      "txHash": "0x7e727c44778ad69be13922c12a2eb8868541cfcfbbd857c3e3a92904f090db01",
      "kind": "uups"
    },
    {
      "address": "0x73D31704Fa5fA4e6Ae4FaB64671E0eD69c0aE4e5",
      "txHash": "0x779ba0db1216f5f6f80ab66a580637c6ca6a5b375e3da31a4f4d7e844206dd9e",
      "kind": "uups"
    },
    {
      "address": "0x3f95485A0F46ca11470de9206814E5C1983c5459",
      "txHash": "0x5257c532c90ca26c7b4198fd87111aaf154d7102ffdd5e6780eb6b38a6c31177",
      "kind": "uups"
    },
    {
      "address": "0x083cd873D08B6051405E33BBd444718465BdD176",
      "txHash": "0xa7eb5e2e8ef22d2232754d23b50a8eb2826df04a2b56922b89a07044fbca86c4",
      "kind": "uups"
    },
    {
      "address": "0xbc93EDEb881c4EC6D7E4f4f1B2A14d00035B272A",
      "txHash": "0xea78482b2b158c371ba548452fe341d7f6dc2bb3f97cc3d4df3e89121e22289c",
      "kind": "uups"
    },
    {
      "address": "0xafAcb3513A83B1a24E0E9E11259E66CE74D67D35",
      "txHash": "0x8fbcf6b8ccf6609f20c72828b958c8ab6e00e4e7574129e2a57f8f82d9f8ac96",
      "kind": "uups"
    },
    {
      "address": "0x67aB335f7CB0635cf8879D76191c3ed3Cc06e8d0",
      "txHash": "0x7ce23b549b0f3214a5545c6545b11a1c9afe3a307c67d876086007175a1bcbfb",
      "kind": "uups"
    },
    {
      "address": "0x41b53Ff71221e35D60Ff4BfbA755E5b9685643eF",
      "txHash": "0xf551261b6a9529c5936142e1fb848939fdadf4a62328012c03f9edd5ada9f441",
      "kind": "uups"
    },
    {
      "address": "0xc5b6BB5C039312103A59B0AAf62013e30B7Eb22a",
      "txHash": "0xa46d52fcb08f1de01cc61f0f199610527612e69dd9f7fac514419f0cccfa462e",
      "kind": "uups"
    },
    {
      "address": "0xEB4a5d1a873dE520212a547A3Ce8C997FEa4A669",
      "txHash": "0x6f83a53584939f63f33deacf5ef9162ee2d1661272eb8606a4f609dc52dcfdf2",
      "kind": "uups"
    },
    {
      "address": "0x380b377111823a6E3892282b83862aE177E3487F",
      "txHash": "0x96882418a080deb6f48156597cffd3ae0ba59cc9f31840607bdcf0c204ef5ef3",
      "kind": "uups"
    },
    {
      "address": "0xB2fF80843Ed61C02378500b505c2956dEC7b7111",
      "txHash": "0x248cb40e35226b4044124a87be4e8f75be6cbaa73920244557f66f596afa12d3",
      "kind": "uups"
    },
    {
      "address": "0x6E53460Ed115bAd20B35489A8389EfB733DC7fBe",
      "txHash": "0xe832b856e003dc2b5aa6b7b392693a7229b098589a43a4d9603244ac598ac6de",
      "kind": "uups"
    },
    {
      "address": "0x278c7bade296Ae61081dc155b52B1F581524Fe14",
      "txHash": "0x92dca1ddfcf4f751b0529b15ba637a4829069fd90f1056892b9ecbc559434c6f",
      "kind": "uups"
    },
    {
      "address": "0xA2bC1ac36aEA2da18e4302E724389E81d75dEA5f",
      "txHash": "0xee5bece343beb69b68f7727c767886cf80cb0897ffb8dd07691899e7857d0db4",
      "kind": "uups"
    },
    {
      "address": "0x06737e7128F3cfBFa1669f9df7872C173966cEF6",
      "txHash": "0xcca547011cbed759ea685795c7fc81843f7ed7b74f1085edcc9e9dc629f541a0",
      "kind": "uups"
    },
    {
      "address": "0x76bF0559Cd121874dF2AABAeAa7046bb42062235",
      "txHash": "0x10b0b46d0934e9d7a0a38e1a823632bd6e124d70cee447adabde58eea8a8463a",
      "kind": "uups"
    },
    {
      "address": "0x8bbFbae78755e75964387DD2a772287Ae614035A",
      "txHash": "0xe0ea966a4848fb1c13d375106a1be3feb5b4281692ebb396c8e02b2aaad2a0fa",
      "kind": "uups"
    },
    {
      "address": "0xdfdb4D4B581E226B9F941D2f3584C6fedE74Ec25",
      "txHash": "0x84d0bcda7a9b21125be02ceda6ca21540b7a6cb595a7057806c3c0acb3440352",
      "kind": "uups"
    },
    {
      "address": "0xd1BC1F9e341103f7363b12Ef81603D8f9Dc23166",
      "txHash": "0x43d7495c1712840a77829952e0d03a4f4a1d392ccca7baf0b25f58c4c460db47",
      "kind": "uups"
    },
    {
      "address": "0x19F9B814163D2250BaC78FC1b9B9EcDf95927A48",
      "txHash": "0xee8e14a2b817a237b3b7e486a68fc8df3f457d4e20de96010b32202ce6d087b9",
      "kind": "uups"
    },
    {
      "address": "0x43C3669ac1B675481750067e01D3606010617fE1",
      "txHash": "0x8791b95a5f10221dd59a22d5898b2001edde8e540bdac89a6f8cfa0440aaca53",
      "kind": "uups"
    },
    {
      "address": "0x627b1da0637E4DD6bcEa5b609fd96DC702aa9893",
      "txHash": "0xc01e350c42ff506e48230b8ecf63182f86e863ff5c5b85912ca708439b862448",
      "kind": "uups"
    },
    {
      "address": "0x0BBC43191F91b359B664CB703aC18E9694491be1",
      "txHash": "0x097a2e95a31776161bd97a0080d6b8e249ca0eb62475bb6e3f97261e58ce2c50",
      "kind": "uups"
    },
    {
      "address": "0x7354A2c745D699d0A0975e2643D13AC1c8a8b0A4",
      "txHash": "0xfe5e0f3c62bb9a72df1dffec9735a3e34528d7aa91f660b896b83bba5e740bc3",
      "kind": "uups"
    },
    {
      "address": "0xb3f467DEeA9c5b3e751537B1DF432CDAE3F34f10",
      "txHash": "0x5993a2292bbcab5118b6ce34841cfeb7d508d0423770f56000ea4a3fb6e31d3f",
      "kind": "uups"
    },
    {
      "address": "0x8846C3ecb006fDdec69Eb263142220d19aFAB226",
      "txHash": "0x429c0708b465d7e2d52150cfcc0eb29dd382168304b49fb8236b0fe9a4b7f49f",
      "kind": "uups"
    },
    {
      "address": "0x655497c04f2e4e08189288ff5139DFa51c5B6Db7",
      "txHash": "0x5f69698472e2037d1d2cd78cb3480482aaf7633bfdaf0925ef875520873b765c",
      "kind": "uups"
    },
    {
      "address": "0x8Ab1A25d8CE257F8207d8f474D8446ffC4c167c6",
      "txHash": "0xf2671eb69413092428dd7eba452915557409e94114823aabb36ca2b90c1d8d05",
      "kind": "uups"
    },
    {
      "address": "0x37E9Ce5FC6aB00821Fa88513AF4A91b7cE1AEe29",
      "txHash": "0x370d0496444f48f3dbca1bbb136bcc609ddb39831371149c319ee9cbb346bb22",
      "kind": "uups"
    },
    {
      "address": "0x2fd1F154957b0421ba0422596D4827593DA0C243",
      "txHash": "0xd1ff478a545918f0b928e8dc6681227ff4d6e5255b97e60121d83c8c686ce498",
      "kind": "uups"
    },
    {
      "address": "0x168Bc6Ca36F2DAa20D7ECa96dD48210f08c3BAb1",
      "txHash": "0x31fb39cd5081d9ead8d3848a886ab12c23f6843dbd63d05bd908c354e865426a",
      "kind": "uups"
    },
    {
      "address": "0xb7Af4D6c3481d4De2Ff8cAb530f4a19249481Bac",
      "txHash": "0x62922a0483aeed4e14ba8cfde3a5299f74d1ef21787589ad22fd19d957d4369c",
      "kind": "uups"
    },
    {
      "address": "0x888F10Ca5d6093dfE2510E60A4A61d0EB0700Aa4",
      "txHash": "0x43cb79c348cf2bf31024103cdb52b32b89fe233045b3cdbd317f94e34fb96b70",
      "kind": "uups"
    },
    {
      "address": "0xEc05F6a33f68e0887ab54973CDF2342ff6bf5cdf",
      "txHash": "0x5deef48d18de65e1e9bde841a74379633c28ba51b2a8da8eb47344631b2bfb25",
      "kind": "uups"
    },
    {
      "address": "0x3d01129e1Cd315687973aa87CFBB02Cd22d5228B",
      "txHash": "0xce2deb50ea1e19e42be4a39df2a0a8e5cfa36577e0f1b829007b15759894a026",
      "kind": "uups"
    },
    {
      "address": "0xa12bb0dd8C09e8139933ab2C577678f338a1813c",
      "txHash": "0xb9cca78a97a1e80a6e72bd81d3a40760121ec1123d48d6e1678ede6cbd51246e",
      "kind": "uups"
    },
    {
      "address": "0xed64328Ce59C82368f44c895a1e94ce1d296f0Ea",
      "txHash": "0x73023399167bd29b68c922234e4941d05118b1ace7e6259510512d8ea40d6fce",
      "kind": "uups"
    },
    {
      "address": "0x0130A72a4F55C3B55cAef47b81aF8c21206C64E4",
      "txHash": "0xd48a8f6268e84a7525c604b135e23d913d678d1f53d3fc22f2865db7c675beb4",
      "kind": "uups"
    },
    {
      "address": "0xDd14cDA37d67Ea739069e8839E33D1A83AE6b919",
      "txHash": "0x8da4f3fc2b93897a0b9fb24233cd49e45a08ee66e70b82fa636aa76e3322a0db",
      "kind": "uups"
    },
    {
      "address": "0x1C7773689FE1ADbcbEe12b9Ef3Bf5A009D7874dA",
      "txHash": "0x0c62b31bb152e0b4c0a719fe27b4ee94d03b302d074d41cf06cc72ee70b5e6bc",
      "kind": "uups"
    },
    {
      "address": "0x2F97c4610B33FCbae30605f81Df09c85465fa42A",
      "txHash": "0x90bb9a0f72dd8b64cf110db738298ae151b56683304d88ca0f4548f0b998e9a8",
      "kind": "uups"
    },
    {
      "address": "0xF9F0D0d827aF802424293c51dF2AD0422764EC90",
      "txHash": "0x44c2018f6a9b7203ee92becd99d9f7f3f6396ce3a4a05de1da27f9dcc96b71c6",
      "kind": "uups"
    },
    {
      "address": "0xCceE6A6e0DA28Ca1D269db7149175F232441C199",
      "txHash": "0xf44f12e220f35ec157400d241c15a4344e1807c34617bd8b367d96739bc13e4e",
      "kind": "uups"
    },
    {
      "address": "0x15ed50F8FF637af9dbC49c517a3790f4363ad9A1",
      "txHash": "0x7ee9dc8c802b39da64927e9389b46b29dd10192ea396952d8f07879d78017441",
      "kind": "uups"
    },
    {
      "address": "0xc63C3798f9F704d36FB8E1F62C411672B7B25fDB",
      "txHash": "0x5596812738de6bf7a7449735a6c7c31ed90e0a4e950bbb668ef05d53bb3c0788",
      "kind": "uups"
    },
    {
      "address": "0x79d88eb75643567EB3A5D4120bAE3d2D92fAb170",
      "txHash": "0x74feb181040b3fa1c79896873df95e5525ca239440804647a31ee6894c6755d1",
      "kind": "uups"
    },
    {
      "address": "0xD532c5D4c2d51D584790Fb787385F8E720D4C5C9",
      "txHash": "0xe65dd82df0c08982a89fa9ed886ac3867df9138b51759d6fd435bc9770dc4ede",
      "kind": "uups"
    },
    {
      "address": "0xec82F5bbB629712f7f607f73b354D5b74743D908",
      "txHash": "0xa0fdae46d6edf23b76eef08cc7b8dbae38a51f5fe41ed215acc4f245fefbc58c",
      "kind": "uups"
    },
    {
      "address": "0xa6F477976b9De144fb05F7059261145FC3f9B09F",
      "txHash": "0xacf54bd4edba0ee7a19707056a175534477a330fc7ce4171c04d733bef8d9779",
      "kind": "uups"
    },
    {
      "address": "0xa2e7ec5B917CB175A1eF90EA578130B8819D05d6",
      "txHash": "0x7867d94be8faeef595169e160465421d54153af035c895d9b0c5fa17fbebd884",
      "kind": "uups"
    },
    {
      "address": "0x6a7F7e687C21DC4f63d2Cd2E6ECfB36Da547f969",
      "txHash": "0xe022620c2ed5d4e8049fc5bae580c28593bdad77b0ac2db6cede71e208cfed92",
      "kind": "uups"
    },
    {
      "address": "0x38EcB6CDE204e6D65B6Eb004e69465e0e0FF68f4",
      "txHash": "0xe9e09fecc4d1e9985a551c23e4914d6d2a803800b61cb438d2a002de915639fd",
      "kind": "uups"
    },
    {
      "address": "0x58de26466452f6bFdB3622A7d96301526AD2F172",
      "txHash": "0x109aeed12a75ffc070287b1257c3915df09d3292f53e7d789d5b38030c2f8197",
      "kind": "uups"
    },
    {
      "address": "0x15DF67Efab7d37739aED42446ec28e2bd0296698",
      "txHash": "0xfad8f895825ee0e7366112129a3f9bde82fa0d6c2d6e00841ac64c4f67f78bad",
      "kind": "uups"
    },
    {
      "address": "0x6472A232A16DAa685336217100969C0Cdd7fA609",
      "txHash": "0xacf3a9d96e0ee2b16c4d056495b020e34753c8d7e586cf89d1ecda0b7f36b8f4",
      "kind": "uups"
    },
    {
      "address": "0xcEa0b2D6F603aA894fa09e409fe2B184FFff7A82",
      "txHash": "0xa24710323cb2de7d591a864a6a63efc3ad39e6d094660a6fe9c3c5d9bcf607c9",
      "kind": "uups"
    },
    {
      "address": "0xA49c4bc8800B824d06B4aCF68f6b00417069e953",
      "txHash": "0x62611fd5cf0e2033d05a2db5ecd7213a2080cbb860524fc8c97d593316336697",
      "kind": "uups"
    },
    {
      "address": "0xDb592Ec3a2C3A44aBe7460fE0631CC777c20Fe97",
      "txHash": "0x061f63c8f1f245162925b60dcaa1359dbe9c5c6087f7fd390a854a793f846362",
      "kind": "uups"
    },
    {
      "address": "0xD9fE47b14Bf3c26Aa041FB797f336eaB654Cb20C",
      "txHash": "0x2a7ff09cb323681765801b5133c8dfc2420ce19bac5b99c6f56fa0b799f25049",
      "kind": "uups"
    },
    {
      "address": "0x44bD939E37703A85E7F611943bc473764fd224F2",
      "txHash": "0x325b2c3230b4cd60ca44a749fe26c30d15781af6439f25afa78a746ede96ccf6",
      "kind": "uups"
    },
    {
      "address": "0x56C656a1ACB1f6d061aaE7C44F3C1cEE177d5f39",
      "txHash": "0xaacaceb909aaa48a83cf490fa6b9f333592de3c19c7f8b0eb469d82936097020",
      "kind": "uups"
    },
    {
      "address": "0xFaeC1632BE33ab05e659e86e8B456f10352F0AA6",
      "txHash": "0x9ef951cb2c87c30a3ca99cef2c685111de18848c86ce60f15afeb2545252b408",
      "kind": "uups"
    },
    {
      "address": "0xa0B22173F55539919B29B1c7D2810e13cc90Ee1F",
      "txHash": "0xbe8604a79e7fe35f20f5576ae6ca390076f4d64e59bb8daf0ae4b1849883f2fb",
      "kind": "uups"
    },
    {
      "address": "0x02E7FbD8ab9b9919B5f4cAB2945d630eC598d551",
      "txHash": "0xae6a56e0dc8c4ea40b7dafedee7aa3cf821f6eb419d0be8c2ac6a754e1400ef1",
      "kind": "uups"
    },
    {
      "address": "0xc9487b5197167d3564081Dbb30fbF3E4b868A6dC",
      "txHash": "0x25bce8025e47d70284869f34d7de2d2aa0c7e7bffe37688433f3b32dddf9ccf9",
      "kind": "uups"
    },
    {
      "address": "0xbA25464145EaE251f1c8c3cA752ddd15e1D631D2",
      "txHash": "0x2ee51d519d06a25abda27e33970dd4fde7053871175420ec312a8aef7321c5c3",
      "kind": "uups"
    },
    {
      "address": "0xE9b294A127816174b33baDc7D19cb997512b48aA",
      "txHash": "0xce6d3b188bc7efd69fe4b1790036597fccfdb220ca0a8ed0d9e6b913a4032228",
      "kind": "uups"
    },
    {
      "address": "0x60f4c85f0B35e2335F6565Dcb7FcA5a622842553",
      "txHash": "0x500b5569dc553cd11b09caecba4f2360a796ea164e63d7f85b9fcc9c04b8207b",
      "kind": "uups"
    },
    {
      "address": "0x463559097EC900Ca1Bf36E85Cd427e88586022d6",
      "txHash": "0x7fa95760d30092979f0b1d057dbd0a606008b84e3189b5dc55840bdb8bf606bb",
      "kind": "uups"
    },
    {
      "address": "0xE42DAEeedbAd79e53F3135bC3e60Ecf607881E75",
      "txHash": "0x41edbd7f9b95971f047de22b72d8403cccbb3b052fca1159faa0570638cac6bd",
      "kind": "uups"
    },
    {
      "address": "0xc6951025AEd60a90afFE85aD8261d20CF8d5b0F2",
      "txHash": "0xef80fa8180140c17f47eca1b1e8812d5921cfe49145ca0ce2af8f943890e0f9b",
      "kind": "uups"
    },
    {
      "address": "0x1a589b1515E97d677B6feCB32Bbf5C7FED87558B",
      "txHash": "0xc56e4d613a561aba659bf8f14433963c699422ee65c9202d0f906014fb8f4abb",
      "kind": "uups"
    },
    {
      "address": "0xbcac8fe457756c9178417764F41Fa742769d36CE",
      "txHash": "0xea2188a8279c4ed52dbe8d6a366c9ea87ca870f2e92a4491364b88b92dfaa9b5",
      "kind": "uups"
    },
    {
      "address": "0x982BA22F5B0Fe2186cb0437df699b505B1d5fB19",
      "txHash": "0x4f945bcbed2d6cb7ae7e1a13b89a7cd4b06cf9fae722b5386be10cb1b8d2b0e3",
      "kind": "uups"
    },
    {
      "address": "0xAbF1A05bd4b36817218D779E8bb733Ea30056eb0",
      "txHash": "0x18644317668fee2579336f9a8d8a3b032547f3cf1df7913f3e545b493db7e824",
      "kind": "uups"
    },
    {
      "address": "0xD1EF874B85B7A2E4246Bb6Ac5A954Ddc04090f89",
      "txHash": "0x4cc40e2682b78dfd2ded207d50b26a49818a496dd0d0f1ad6b22efc158e1b451",
      "kind": "uups"
    },
    {
      "address": "0x812911ee17b22bB3078491F968BF7D37Cadda4b6",
      "txHash": "0xb66378b149febe583d01ee7b20cef9cb64273e3cc702adaa91d7ecada8a4919e",
      "kind": "uups"
    },
    {
      "address": "0x9680ecf52d05c0D8b58608972106B605081b4D3B",
      "txHash": "0xc7ee724fc17f2a21ea5495b85fcb279517b6d3d6319bf18bdae54551306968d3",
      "kind": "uups"
    },
    {
      "address": "0x3F31B310FEc4cC39F3C62C11eaDAA3E64BF2F30C",
      "txHash": "0x2942051740552462bae3bbf3bd7145bc127f251b0f22ab5aed68651e06e72616",
      "kind": "uups"
    },
    {
      "address": "0xAe8Fbf5b238f2159025b4FA1ec8a22Fdd0812105",
      "txHash": "0x125ef56fa58382832a430fdf349afc6e366da71bebfb3acb801a0864b2cae36c",
      "kind": "uups"
    },
    {
      "address": "0x20a0630D1a24a08b2deA9578a2673a4123F0Fa1d",
      "txHash": "0x569123b35b5afd7f580d24197cda8af83977b0d79bcc29c1581457d112572f2b",
      "kind": "uups"
    },
    {
      "address": "0x59f468Bb71Ce8dD264f1D55C1C3Ba24c723DB148",
      "txHash": "0x3f6a30a9e751c791306bc5215637e0f965557c8165ea745e1b72a920b9f3d4f7",
      "kind": "uups"
    },
    {
      "address": "0x856f57a9760a79dDc7E558749992DeA2ac9F6819",
      "txHash": "0xa5ed05f3bb03319d4801b75b97ec99b4d05e7a14cc4f5418e713277a8f31907d",
      "kind": "uups"
    },
    {
      "address": "0x8AB57Bf6897c82dDA772a495982C500527e7889b",
      "txHash": "0x6fc8a3d3863f4cb5a62ac465adf10ea6fb2caa687e32e11461528414b12c4155",
      "kind": "uups"
    },
    {
      "address": "0x1ce2A3dde17da971e6affe2F464aF192571b24Df",
      "txHash": "0x1ee133c14102ef63c702af7f151eed6b0682b478d7fb271e65f9876a6194fcd6",
      "kind": "uups"
    },
    {
      "address": "0x222c72076DCcae93Cf9458846f83211ec16C27Dd",
      "txHash": "0x33ad54de39a60c7eaa2b2cb9c9407f164bb2a3156961d211a3ac1e05c5453436",
      "kind": "uups"
    },
    {
      "address": "0x37154188f810C23E0237Dc44fadE1B849F2C3979",
      "txHash": "0xc405043921315c0da399c39bb52e5edf5cac29df9156e95a2bf1fafdb933fa70",
      "kind": "uups"
    },
    {
      "address": "0x0f318510aBBF0Fab000ddE11A5Ff5554749a8a99",
      "txHash": "0x6fec5bbfdacd3b57438bdbf3b6003ff9d13d409d57d2bb5be027441e0e72b52d",
      "kind": "uups"
    },
    {
      "address": "0xC4f2502989adeeB572DE24711329DBC2DaeACe8c",
      "txHash": "0x1fe39a3627a846eba3a29322e68236530d56e2b3cb0a902d3795a56e5ebcd4aa",
      "kind": "uups"
    },
    {
      "address": "0x0f7Fc38c9100409FfaeD5A85016A6E1caEBB8a68",
      "txHash": "0xd69adbb4635ec969104c22a0ea192e735fb1210f836a0f9084149c0c952f02c0",
      "kind": "uups"
    },
    {
      "address": "0xDF6D61904ab3ce49FD7833b05ed5ddf86870625C",
      "txHash": "0xf6cd431cab0e6aa006360fe28b6a2eaf58a90a6426bd0aef871da6dda5a4e375",
      "kind": "uups"
    },
    {
      "address": "0xD0fC93530D8922393deB37990a22c0a8022098b4",
      "txHash": "0x2a907105a15815ba53333e955d36d3e72ff4d128c1358f22c79e2aa24942fbc7",
      "kind": "uups"
    },
    {
      "address": "0x374C393C074A2d050533cb7355f7131fDCa814af",
      "txHash": "0x3bdd1f04f4e7b28b86c0b909f8524e3c18cab6d6f47844a34bd63d4d2281bcaa",
      "kind": "uups"
    },
    {
      "address": "0xADE99A1E683d70f16046C0D7572408b6589824cE",
      "txHash": "0x107588e9c3cf4ea4dbe5ccaaff7f32a94d94ac5803c025fba70b072b6f713c21",
      "kind": "uups"
    },
    {
      "address": "0xE439D0AeD8D114411678a3125d5477fdC5091C1A",
      "txHash": "0xcdf1206a5ee8ddafd8a6a8a4af1467b42e843066b9cdc7a04146a5a85eb3b474",
      "kind": "uups"
    },
    {
      "address": "0x80C0c7e3248718fFFCd708cC2A2c1A6Cc69054B0",
      "txHash": "0x74bc116726f2fc95d283ec945feb4e9e94583be8df21288bd6cf2e41c02fa7cf",
      "kind": "uups"
    },
    {
      "address": "0xbb47EaB3D2fA54CED9d135F0Da4708D7F0ae2a43",
      "txHash": "0xa4b4b0e7aa004d027931bbef01870f0a728cfeadf9c0a0ffacdacf8d5a4cd1ce",
      "kind": "uups"
    },
    {
      "address": "0x14d36555fFf496C4E7e9b0DF9EE95c816ba92477",
      "txHash": "0x70fe9b431b6cb2f953a692e03c8cc778e9e2174d9cbaf17350e25c951bc130a1",
      "kind": "uups"
    },
    {
      "address": "0xa299cae66Aa6d7b038090BF356bA4306DF63ca2C",
      "txHash": "0x9381d6530466cf3b328753bdb5adff2f855b5df740dd991e9c66433472970aa4",
      "kind": "uups"
    },
    {
      "address": "0x9924a63D4ea4778BC352894D2dc845080F69A4BC",
      "txHash": "0x59c3b310f24d817cff35385d440394a6eca19968b063e80120380165534d3b10",
      "kind": "uups"
    },
    {
      "address": "0xad64dAf9889B4F4A4176B7A0a9D310540103d210",
      "txHash": "0x54cd13bbf32ecf2bb814082caab6bad21ca344e27a768bb0a6bd9dceb8f8c71b",
      "kind": "uups"
    },
    {
      "address": "0x4952Cb98203C0EaB823429459aabA6b8669BbA64",
      "txHash": "0x20cf8e7f8465ee5bdd4e5d87dc9c7ee50a6ba4841cc7cdba667f1f8d3d420d4f",
      "kind": "uups"
    },
    {
      "address": "0x328c611A312F91704e608ae18b0c886BF3e72AF3",
      "txHash": "0x885b2962697d950480fd260d8d8c0e8b68cb91494894831f2480e5e906387de3",
      "kind": "uups"
    },
    {
      "address": "0x8f1d2C5b3c6D3545808c0153F5856f75D3060ed6",
      "txHash": "0x2954c8fd98438f671543f1ee319d27a1dde3871d458114b4af320f959a6d9707",
      "kind": "uups"
    },
    {
      "address": "0x243d70D45b7591BaD4Df52cf902372C04D9419c6",
      "txHash": "0x6b65b89f4e711092e70232ee704eeecd8d7364044c21a59508e38539be250e82",
      "kind": "uups"
    },
    {
      "address": "0x680E84Af4865917267bD8348D0408111A68b35dD",
      "txHash": "0x81693ab38885f0b519980047d973e2fd5081df16561c22b1d982d244a4af2117",
      "kind": "uups"
    },
    {
      "address": "0x22b649a2982B9C32CA7892ac3D7f34D0321c28C0",
      "txHash": "0x64bf4ddced273dad07701ba8afa82ef6c75ecaeaa713962aeac6b35db241e524",
      "kind": "uups"
    },
    {
      "address": "0x2d6FDd2A588b6B19be1Adc6C7f5a5A77297Ba1B3",
      "txHash": "0x8b321afa59b09f06f0b6c34edd2281d01220d816c6f61777cc88ff88e6434459",
      "kind": "uups"
    },
    {
      "address": "0xAcE394D06f0cbFad63792db6343C1772d73C4377",
      "txHash": "0x3aa545076e5822835c03657fa338750f1d1c323e323148b979797c7d08d666bf",
      "kind": "uups"
    },
    {
      "address": "0x95726599700aF23D8329173001c2C13b45364B62",
      "txHash": "0x49fa45fb2a4b67bae3a79e786323b24fb6b8961f0236e5ce111feb23ddb08caf",
      "kind": "uups"
    },
    {
      "address": "0xFE61CA1bfbA6A4af62f924d15a72E6dC473F35E4",
      "txHash": "0x61eb2f5e7bcb38685da2af7103588b042dafe01d925e6db85dc09f5d5a8c8f28",
      "kind": "uups"
    },
    {
      "address": "0xCcD360A04A0D0438dB540b2200B292EA9C3B9F43",
      "txHash": "0x1e6ee5f3192ee27f3445c406b2b1b63659b92e73ea685e9ec8a49b82c60e0be9",
      "kind": "uups"
    },
    {
      "address": "0x0a2F5A5beE0bA383892be45a735782d022aAe5A1",
      "txHash": "0x6fd9152969e07342c9692d8b7b088190a73888be13685d3db0d8ff5fb0964100",
      "kind": "uups"
    },
    {
      "address": "0x2DcFd656fF713A9154d8CC3CB45474875Db87bf0",
      "txHash": "0xe5b29e21c2a260273a1fc18d0e6ab680ab7b2f9f866185023486a0e7ac6c60d6",
      "kind": "uups"
    },
    {
      "address": "0x796D0989ED1AB669AD60EfE366587766bBbA25F6",
      "txHash": "0x8e5ec810045828c7e1ff2c6f885a68c4803d9597965aefb015b3cf41cabe07d8",
      "kind": "uups"
    },
    {
      "address": "0x4366a66345Ab5a8C684513693d703d2FBceD0253",
      "txHash": "0xaf04e9f10252413870684f0939a8071881260649f653dec30ab7bbb73e3c5858",
      "kind": "uups"
    },
    {
      "address": "0x13BBF928Aef277E80921BC3F547eF216551d6855",
      "txHash": "0x8ff0e945bca97528c630243819e51789fb6ac97f7581585ae7905b2a9c41cc36",
      "kind": "uups"
    },
    {
      "address": "0xc19E3070763E02805b55EcD3d0107d43d6154Dd0",
      "txHash": "0x79a3c20375858b2e312ff3b684893c133b882b7366853405ccb9263c04ec77b1",
      "kind": "uups"
    },
    {
      "address": "0xEeB1e8aB2bcCE2627BDA8Bea2072774F9d397c2E",
      "txHash": "0x7dcd0a7aa7bda3c19286dacbd8a1edb57eb8cc76b228a5f05085abb618d1b272",
      "kind": "uups"
    },
    {
      "address": "0x2c1573ad2833e8952c72A5Dd35435F9fc09f2833",
      "txHash": "0xeffe5745d4d7e3c1a79a34c42983957f7ad2d8eefe8614964547132c2eeee8d9",
      "kind": "uups"
    },
    {
      "address": "0x7b2D51DFe18Be35C45D4c61BFC3c0Ebf8d96e482",
      "txHash": "0x0880c1f18a2ac8bdc725433925b84e0ad2d600dc0d106041185bf55d1188de50",
      "kind": "uups"
    },
    {
      "address": "0xEA1F919f0D60783Ec5959dfBdFbcbA2302589e70",
      "txHash": "0x0fd01f8919e2acab4f14037b9b8b6ed7df049b9fdc461611bda6c6fb697e6057",
      "kind": "uups"
    },
    {
      "address": "0x7CF155b754bDe0a5D96f74f5E9FA15119b3C8f6b",
      "txHash": "0xf7c9c6946f96e79907375e3804517701f16930381bae171b3925ac3bda54f8b7",
      "kind": "uups"
    },
    {
      "address": "0xf20FeFF7954A4a3D49E028947a362659091BE371",
      "txHash": "0xc7cf563cc0c23c332ef26a3cc999b0345a51caf2fe7d63a1715e3346ea6b8d1c",
      "kind": "uups"
    },
    {
      "address": "0x0ee737A33487A05f42dCF5BD614DfD0520E3B45A",
      "txHash": "0x14633f3b4800f7a1ba1572b5f1847343d22ce07bb4456be285ab48b69436b197",
      "kind": "uups"
    },
    {
      "address": "0x39893d900a4B31C6f68d89C060E318E27BBce349",
      "txHash": "0xe81f078e66f350521203e8059f60f9f128f6c00eb50682541c8de01f29097a75",
      "kind": "uups"
    },
    {
      "address": "0x878e1423f131F419b671A0d1cc5c41E78E33Ec25",
      "txHash": "0x1c7b883ab7091bc771497628816793ab803ce9275e3e06d7ec8d0f75894266ff",
      "kind": "uups"
    },
    {
      "address": "0x3337CfA9Af46ed95D3b4B22Ca1510Dd0988556d2",
      "txHash": "0x4dc9c8cc7a5220d630f65682b6e2c6d284a3a7cb3696689254e4580f3a1f99d3",
      "kind": "uups"
    },
    {
      "address": "0xb10124f1B5949a1691324eAeEe2d88dF23635300",
      "txHash": "0x545805e02f630e37052dc463e17b10dbe4f91ff563263fe5be440d2b42a6852c",
      "kind": "uups"
    },
    {
      "address": "0xf26508150FA74bc0FC7fB6a7c6CA65Fe23599c20",
      "txHash": "0xa05a22848d3efe97766dc0b97fe5bc31637a9b71508a1ea52894b00800a4ac3c",
      "kind": "uups"
    },
    {
      "address": "0xf041c331341A4AC1633447a4b6Ef4743a077F9B3",
      "txHash": "0x60dcfd08d100ca0449c17e5619062dd665e6c27fc22df99495e056be2aacb8c1",
      "kind": "uups"
    },
    {
      "address": "0x7e7Dd305D1cBd6deB24573620BAD8091ef9f234c",
      "txHash": "0xa6f28506ae1f836d83a49ed1028717e4272cad3523c85a38911c4d6d0ca29384",
      "kind": "uups"
    },
    {
      "address": "0x77486A492574a465274501aEBb6443B191f80fC5",
      "txHash": "0x192c7f18af9db8e29c9276baea6c396dd2c914f8723233506e791ac49be219a9",
      "kind": "uups"
    },
    {
      "address": "0x772E7b5D8b1a5e161A1bD840ec6710fa14e65eB7",
      "txHash": "0xeee79347e2fb81c37157c8e4f5381e104dbf2c57cfee756244bac77ca5f6c98f",
      "kind": "uups"
    },
    {
      "address": "0x34894991e02a5A5e9dCD2Fc4573F22b04Db7aC93",
      "txHash": "0x4cfbe6f11ec1a8a2dc95527715e48e29c071a327f94f13be008dcf60ba90aef3",
      "kind": "uups"
    },
    {
      "address": "0x93F3fb11d31EDa1de8EB03Db9C6CCdD41f62C615",
      "txHash": "0x0223b78082969ab6838089ab4c458ccd0ff9829faa13c6691d08dc1755a5757e",
      "kind": "uups"
    },
    {
      "address": "0xAb3a177BE542933154112953201875A9E2408496",
      "txHash": "0x58d6dd25ae87d45c2038d0c2fc3eaee22c04837b1e45f44fa4866c1c7c6e46c6",
      "kind": "uups"
    },
    {
      "address": "0x447f1D0cB73e8d2f5035C05444D7c1FCdf96CA73",
      "txHash": "0x9651a0fb70212af9b3e383b162d53ec2434f97d0af6d9dba9880634d72c7985a",
      "kind": "uups"
    },
    {
      "address": "0xe7365034d91Ab8cBB55cb7f7FC9717EaC4ED2EbC",
      "txHash": "0x2c6e5b226035d9dd23c401a16e943cbafcf7de1fa8fd93f0c5973e9acf160a7b",
      "kind": "uups"
    },
    {
      "address": "0x192cA1Cc8aa6bb562dc446C7788DaA209F7F4B62",
      "txHash": "0x6f2ca96f4ee1d3f0ad31555d50270829a2d895294a9d82065313b14ac9f369ad",
      "kind": "uups"
    },
    {
      "address": "0x134bd8B35862F38853fc790Ac710ed6a0186Ffa8",
      "txHash": "0xbb12c83e5468df5695d24d5fc1186be52b7ee91a5b4fbae9efad1969430c166d",
      "kind": "uups"
    },
    {
      "address": "0x13d8d819d5C096Dcb4aE7fEE4775783aA7ae0a7d",
      "txHash": "0x063724c054ba895eae11c0df9eb018fdc1c1ceb8baf78ffa75618a8763c84724",
      "kind": "uups"
    },
    {
      "address": "0x2BA767FBeA45C35689Fe6194FcE5595a03CdC09a",
      "txHash": "0x3e9c3a644d8eccd1ad4b09bb39105020cd6f7da9716ee7f4101c8fc078e52193",
      "kind": "uups"
    },
    {
      "address": "0xE072Eaaaf870E430566FbBf881d185e8Af6a1C6b",
      "txHash": "0xcbc62456a4f4724d3fa7c7c35f359b9d03aec993770a4ad1be6f7f88fe8640e9",
      "kind": "uups"
    },
    {
      "address": "0xcC5D8d54643d6ed3D39A9457B35655F034534eBe",
      "txHash": "0xbebbef32500344616f91a58495eb969f976e412067766b71d26d667bdc030da4",
      "kind": "uups"
    },
    {
      "address": "0x83B8C3982ba490836cEBba74Df7a049cb76847Fb",
      "txHash": "0x2a953b4b171490bf262168550a7fe227268a6a02dbe53a04fb3f1efec32aa848",
      "kind": "uups"
    },
    {
      "address": "0x4F8B85856db0f42F0d94ba5E76AAA2342d0B8a31",
      "txHash": "0xec0de91fdb8b9ce8ff128ccf3282e51fe193dff0a73d564cd164ecf2dbbdc9f0",
      "kind": "uups"
    },
    {
      "address": "0x45B431a0a4f60D9AE63312388D229f5C45e9432d",
      "txHash": "0x4d394e46250043e6ffb359ee6e489def276322365ed6a4a323647fa0d53c8e66",
      "kind": "uups"
    },
    {
      "address": "0x0FF3724F38315fEec862854e39918C6fE3CB8144",
      "txHash": "0x1943b8240582c41ccc263bc71ef3676b370762f9402357071a41609efb197b6e",
      "kind": "uups"
    },
    {
      "address": "0xa582b114143346CA125d58eAb5d18E192fE9abd2",
      "txHash": "0x7a463c5f694ead8aedebcb581fb30f3d1d73d23c00b815d591eb5b21f79973fb",
      "kind": "uups"
    },
    {
      "address": "0xc58eBD6CfC3df03712beD6F82715eB181021Abf3",
      "txHash": "0xa0500ec7e212a28a0ea62072b9516aec11a45daf57392b73ecf05092667b08bc",
      "kind": "uups"
    },
    {
      "address": "0x045749AB71403481f5D55e4f1881Ac400cd3b036",
      "txHash": "0x47089719ca2a3a27a857954c365f242a318e967338347760431d1e7f5a141927",
      "kind": "uups"
    },
    {
      "address": "0x2c0575d97C7d26e31E0e42096bF877D3C8D9b141",
      "txHash": "0x6bd0449e6ad88a2aac7fdef68c7c714d1e91c9c159a64198f126ba82a83f91ff",
      "kind": "uups"
    },
    {
      "address": "0xFcAdb6d65884957338F13a5ABD8900De5Fbd392C",
      "txHash": "0x462d14248c8cefda08ccab08c5d67d4fe061fe64dc9fe1fe702c4782087c2220",
      "kind": "uups"
    },
    {
      "address": "0x55C880e87cC4E007Fd1785C2345C51CA682e5Aeb",
      "txHash": "0xa464e8eb38acede6bdf5913dde86f561b1c25568b8410eeac69cfa722a525e3c",
      "kind": "uups"
    },
    {
      "address": "0x54Db5053ba4D19E2F4bAF7FeBfcfe286416De1FD",
      "txHash": "0xa1f447cd6a07b3b75dc80d80b3bbcce6d5de0f19d92d601dc8fffef04fcfecea",
      "kind": "uups"
    },
    {
      "address": "0x145eA7EE9d177387C43ECEfBa0a99f3eBc5d0922",
      "txHash": "0x775625c692514c5c0d3c0c36a53642223dc3d6c3a1e25d2bfe16078db517631d",
      "kind": "uups"
    },
    {
      "address": "0x14FAdE38C22f5fe605b91e2c6f91575a8561BB5a",
      "txHash": "0xe431305127a94e99a4741ce16a22fbd13b44eea478b2430c6ad18469a381c9bb",
      "kind": "uups"
    },
    {
      "address": "0xF23Aa8E11b06cD010393312C6Fa59A16aD48b3ec",
      "txHash": "0x7ec805659a2aa8677bf8abe8ea7bd7198b17ee1f5c96e3cdc8997d3b79d1a542",
      "kind": "uups"
    },
    {
      "address": "0x573B96A46cC44F7a88D52e52f77aeEe2bC760d18",
      "txHash": "0xba3dfa1e5f40aeefe384eb3c773a1fb01ef353d946ae4f7613215977604e75ff",
      "kind": "uups"
    },
    {
      "address": "0x3e16c927a3Ac39cF85D8683440689EBD8F0837D4",
      "txHash": "0xf3b83e2ff19ae4268bbb769ac8d1e56b5ea5e0b9448d076b347ddb4db2e93426",
      "kind": "uups"
    },
    {
      "address": "0xbc98e664b4b49da353e14C215875Fb79E9855691",
      "txHash": "0xaae6fa64367854de66aef1d482e008a32f9e83c3806f6fc322b86d5fbc1de912",
      "kind": "uups"
    },
    {
      "address": "0xEf748FE93016F5592F37886D46a6b578A125aD72",
      "txHash": "0x3c228f653870cbcdeeb93a630074c692c9f84b82d849c277581b10d9fb871b96",
      "kind": "uups"
    },
    {
      "address": "0xbCcEB9B53a10149479891D3D4Ef96b700ff2e8d4",
      "txHash": "0x4886dee29f5feee10876b51dabcaddb47002437747c5471500b2d920189500e6",
      "kind": "uups"
    },
    {
      "address": "0x86D814dA642BDC5cDC3D85C7D2b1eBcaD50B1a75",
      "txHash": "0x04e687ae8cb073cc49e070ae2223eda9e7f09635984b3f8fb99b3a3257ed3a06",
      "kind": "uups"
    },
    {
      "address": "0xd2d26DD9E50B01F7d76d0CD53c58dAc75937e15B",
      "txHash": "0x6b2ef145eb171710257ca04beda69a1f45ec3489f46cfb6058140f23b077ea71",
      "kind": "uups"
    },
    {
      "address": "0x7c6976a1378fB97667b6A1B85B2608c279352436",
      "txHash": "0xd14825e90d076d7186ba7eb04e0289b10bfb3e532aabff3ff8c9c508c0cf14bb",
      "kind": "uups"
    },
    {
      "address": "0x2e70789F5a18eFAbAc36d1457E86c757734d0110",
      "txHash": "0xc5606162438abf65ea5be534aca57b94d8d3591c52f70f447b16ab5422aace39",
      "kind": "uups"
    },
    {
      "address": "0x2f13E95bd6AcF58AFc515779EFF7c7125500bD26",
      "txHash": "0xdb5f4a5ca3c9a9dc254551cdf204812cdf6dd36973130a4b6b613132911cd71e",
      "kind": "uups"
    },
    {
      "address": "0x93FAb548c86E2c4c4375c4578b7cFf0A128E413C",
      "txHash": "0xaa03096e57fe5c2115099943f58e3aafee45c8507cde8dd7331f24ee4b0f8c03",
      "kind": "uups"
    },
    {
      "address": "0x8c5A352DabFDB2D25561B6517cAc9DC0Ad0aB5dd",
      "txHash": "0xe47046b345780187e0d0f21aa0b133426bf9cb4eae868b5f5ea7c5498ca53a6a",
      "kind": "uups"
    },
    {
      "address": "0xB6abf0D74162dB513F20a609Ef054463E2c8c83D",
      "txHash": "0x96d4ccc78db9a6b7683b704e2f7bc6567b60e7dd734de8263564552b56112a5c",
      "kind": "uups"
    },
    {
      "address": "0x3eb2C69A4951818df4618D2d9909DaDD971bEed5",
      "txHash": "0xcd737854522dd814c274e03da5797e606553609d40db0af99b8c57faffb75ad9",
      "kind": "uups"
    },
    {
      "address": "0xD4FA8023facf66096A25E096D1F59E807a3CA41C",
      "txHash": "0xabb6e3297f7272663807cf2eade2d307981aacdfc9eb0a97b882a4e598046dcc",
      "kind": "uups"
    },
    {
      "address": "0x1A9dd3ecDbD4308e7861C5A7B164B93C13Dcd5a1",
      "txHash": "0xf756d012edb88d5e8ed0bb4811acec196133aac0633c69d74394e84a6adcc5c2",
      "kind": "uups"
    },
    {
      "address": "0xC1451d9AB1074E9F2f05034924ccbBCb9093C86a",
      "txHash": "0x6d5a419eec3e704dde8ba9e6b5649701ef956339ee8805770b2512122a044f31",
      "kind": "uups"
    },
    {
      "address": "0xE01852b2337D86A774897DE94dDEE60CA6DA3D3C",
      "txHash": "0x952fae4be04626a28d290d8909cb04194a3208d7d14f17430f62516c4858621f",
      "kind": "uups"
    },
    {
      "address": "0xD50f238a4F4721C80Bb8A343cabcaC20dF30AF94",
      "txHash": "0x1d9d5bdd63b7d5d1678be39a99c6234f84a69ab3b467c1d580b886b4e34cf46c",
      "kind": "uups"
    }
  ],
  "impls": {
    "77bfa5e2d6cfac492eed560ef017dd8839b90ddf9ddfdbded9399bf586c71604": {
      "address": "0xc3F2Ec13639332B1CA40950E14856B0Db7E44466",
      "txHash": "0x5b3bfab585036c5b50588ede36f5f1dcee81a8e65ceea97f061196667ecd94bd",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "CCNftStorage",
            "label": "_nftItem",
            "type": "t_struct(NftItem)9775_storage",
            "src": "../project:/contracts/CCNftStorage.sol:12"
          },
          {
            "contract": "CCNftStorage",
            "label": "_usedTokenURIs",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/CCNftStorage.sol:15"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftItem",
            "type": "t_mapping(t_uint256,t_struct(NftItem)9775_storage)",
            "src": "../project:/contracts/CCNftStorage.sol:17"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNftStorage.sol:19"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToOwnedIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNftStorage.sol:21"
          },
          {
            "contract": "CCNftStorage",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNftStorage.sol:23"
          },
          {
            "contract": "CCNftStorage",
            "label": "_tokensExtractionsByYear",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNftStorage.sol:25"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftCreator",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/CCNftStorage.sol:28"
          },
          {
            "contract": "CCNftStorage",
            "label": "addressesFromTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/CCNftStorage.sol:30"
          },
          {
            "contract": "CCNftStorage",
            "label": "_allNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/CCNftStorage.sol:32"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)2893_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2893_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CCNft",
            "label": "txFeeToken",
            "type": "t_address",
            "src": "../project:/contracts/CCNft.sol:31"
          },
          {
            "contract": "CCNft",
            "label": "_nft",
            "type": "t_contract(IERC721Upgradeable)2645",
            "src": "../project:/contracts/CCNft.sol:36"
          },
          {
            "contract": "CCNft",
            "label": "_tokenIds",
            "type": "t_struct(Counter)3414_storage",
            "src": "../project:/contracts/CCNft.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC721Upgradeable)2645": {
            "label": "contract IERC721Upgradeable"
          },
          "t_struct(Counter)3414_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(RoyaltyInfo)2893_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)2893_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(NftItem)9775_storage": {
            "label": "struct CCNftStorage.NftItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "creator",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(NftItem)9775_storage)": {
            "label": "mapping(uint256 => struct CCNftStorage.NftItem)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "b24f0b6f6a983f020e19d02e5b97508bd5bf78c9f4f43621a0c52941178fe0a5": {
      "address": "0x355cFC1Af410f5651367F5a7c52a8200f2D70A1C",
      "txHash": "0xaac953088777a2da001dfb1cb04360eca7001597bb136d90569d37ea6e84ed27",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "CCNftStorage",
            "label": "_nftItem",
            "type": "t_struct(NftItem)9775_storage",
            "src": "../project:/contracts/CCNftStorage.sol:12"
          },
          {
            "contract": "CCNftStorage",
            "label": "_usedTokenURIs",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/CCNftStorage.sol:15"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftItem",
            "type": "t_mapping(t_uint256,t_struct(NftItem)9775_storage)",
            "src": "../project:/contracts/CCNftStorage.sol:17"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNftStorage.sol:19"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToOwnedIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNftStorage.sol:21"
          },
          {
            "contract": "CCNftStorage",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNftStorage.sol:23"
          },
          {
            "contract": "CCNftStorage",
            "label": "_tokensExtractionsByYear",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNftStorage.sol:25"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftCreator",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/CCNftStorage.sol:28"
          },
          {
            "contract": "CCNftStorage",
            "label": "addressesFromTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/CCNftStorage.sol:30"
          },
          {
            "contract": "CCNftStorage",
            "label": "_allNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/CCNftStorage.sol:32"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)2893_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2893_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CCNft",
            "label": "txFeeToken",
            "type": "t_address",
            "src": "../project:/contracts/CCNft.sol:31"
          },
          {
            "contract": "CCNft",
            "label": "_nft",
            "type": "t_contract(IERC721Upgradeable)2645",
            "src": "../project:/contracts/CCNft.sol:36"
          },
          {
            "contract": "CCNft",
            "label": "_tokenIds",
            "type": "t_struct(Counter)3414_storage",
            "src": "../project:/contracts/CCNft.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC721Upgradeable)2645": {
            "label": "contract IERC721Upgradeable"
          },
          "t_struct(Counter)3414_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(RoyaltyInfo)2893_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)2893_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(NftItem)9775_storage": {
            "label": "struct CCNftStorage.NftItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "creator",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(NftItem)9775_storage)": {
            "label": "mapping(uint256 => struct CCNftStorage.NftItem)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "e8d44ab50ae64161008dd6bad70aac3e8f86bad0f6133bca5c4a6f7ef9741201": {
      "address": "0xc1fc79F504D82c687932f245A6a7378a56B0EB63",
      "txHash": "0x8dadf533eafe2f5258f365eeb0515fe2c86404ebee55077b705139b48442a293",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "CCNftStorage",
            "label": "_nftItem",
            "type": "t_struct(NftItem)10134_storage",
            "src": "../project:/contracts/CCNftStorage.sol:12"
          },
          {
            "contract": "CCNftStorage",
            "label": "_usedTokenURIs",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/CCNftStorage.sol:15"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftItem",
            "type": "t_mapping(t_uint256,t_struct(NftItem)10134_storage)",
            "src": "../project:/contracts/CCNftStorage.sol:17"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNftStorage.sol:19"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToOwnedIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNftStorage.sol:21"
          },
          {
            "contract": "CCNftStorage",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNftStorage.sol:23"
          },
          {
            "contract": "CCNftStorage",
            "label": "_tokensExtractionsByYear",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNftStorage.sol:25"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftCreator",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/CCNftStorage.sol:28"
          },
          {
            "contract": "CCNftStorage",
            "label": "addressesFromTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/CCNftStorage.sol:30"
          },
          {
            "contract": "CCNftStorage",
            "label": "_allNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/CCNftStorage.sol:32"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)2893_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2893_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CCNftV2",
            "label": "txFeeToken",
            "type": "t_address",
            "src": "../project:/contracts/CCNftV2.sol:31"
          },
          {
            "contract": "CCNftV2",
            "label": "_nft",
            "type": "t_contract(IERC721Upgradeable)2645",
            "src": "../project:/contracts/CCNftV2.sol:36"
          },
          {
            "contract": "CCNftV2",
            "label": "_tokenIds",
            "type": "t_struct(Counter)3414_storage",
            "src": "../project:/contracts/CCNftV2.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC721Upgradeable)2645": {
            "label": "contract IERC721Upgradeable"
          },
          "t_struct(Counter)3414_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(RoyaltyInfo)2893_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)2893_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(NftItem)10134_storage": {
            "label": "struct CCNftStorage.NftItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "creator",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(NftItem)10134_storage)": {
            "label": "mapping(uint256 => struct CCNftStorage.NftItem)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "cf24fac72f6caae3732a493ba8053faa03e141107c58f1d7dbd4d5cd296a05c6": {
      "address": "0xf5AbEfCb57Da6998C087D6A28D2D04628007D614",
      "txHash": "0x0e2ee143a165f9f126097127e9e82a3bd9b06c2c1b972f6e85cfedb329c2de71",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "CCNftStorage",
            "label": "_nftItem",
            "type": "t_struct(NftItem)10134_storage",
            "src": "../project:/contracts/CCNftStorage.sol:12"
          },
          {
            "contract": "CCNftStorage",
            "label": "_usedTokenURIs",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/CCNftStorage.sol:15"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftItem",
            "type": "t_mapping(t_uint256,t_struct(NftItem)10134_storage)",
            "src": "../project:/contracts/CCNftStorage.sol:17"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNftStorage.sol:19"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToOwnedIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNftStorage.sol:21"
          },
          {
            "contract": "CCNftStorage",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNftStorage.sol:23"
          },
          {
            "contract": "CCNftStorage",
            "label": "_tokensExtractionsByYear",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNftStorage.sol:25"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftCreator",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/CCNftStorage.sol:28"
          },
          {
            "contract": "CCNftStorage",
            "label": "addressesFromTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/CCNftStorage.sol:30"
          },
          {
            "contract": "CCNftStorage",
            "label": "_allNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/CCNftStorage.sol:32"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)2893_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2893_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CCNft",
            "label": "txFeeToken",
            "type": "t_address",
            "src": "../project:/contracts/CCNft.sol:31"
          },
          {
            "contract": "CCNft",
            "label": "_nft",
            "type": "t_contract(IERC721Upgradeable)2645",
            "src": "../project:/contracts/CCNft.sol:36"
          },
          {
            "contract": "CCNft",
            "label": "_tokenIds",
            "type": "t_struct(Counter)3414_storage",
            "src": "../project:/contracts/CCNft.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC721Upgradeable)2645": {
            "label": "contract IERC721Upgradeable"
          },
          "t_struct(Counter)3414_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(RoyaltyInfo)2893_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)2893_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(NftItem)10134_storage": {
            "label": "struct CCNftStorage.NftItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "creator",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(NftItem)10134_storage)": {
            "label": "mapping(uint256 => struct CCNftStorage.NftItem)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "026de633076d57bf96984ddf9f14289e9ddc5397b6865d13a563e5600f4a9611": {
      "address": "0x307a835Ffcb52C53237642c8342bb8E20d242c91",
      "txHash": "0xa0d28786ad9e753ec7aee32c60c22b497f56c2453e1e5f9cd1f9074ed4567309",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "CCNftStorage",
            "label": "_nftItem",
            "type": "t_struct(NftItem)9838_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:10"
          },
          {
            "contract": "CCNftStorage",
            "label": "_usedTokenURIs",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:13"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftItem",
            "type": "t_mapping(t_uint256,t_struct(NftItem)9838_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:15"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:17"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToOwnedIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:19"
          },
          {
            "contract": "CCNftStorage",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:21"
          },
          {
            "contract": "CCNftStorage",
            "label": "_tokensExtractionsByYear",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:23"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftCreator",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:26"
          },
          {
            "contract": "CCNftStorage",
            "label": "addressesFromTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:28"
          },
          {
            "contract": "CCNftStorage",
            "label": "_allNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:30"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)3410_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3410_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CCNft",
            "label": "txFeeToken",
            "type": "t_address",
            "src": "../project:/contracts/CCNft/CCNft.sol:32"
          },
          {
            "contract": "CCNft",
            "label": "_nft",
            "type": "t_contract(IERC721Upgradeable)3162",
            "src": "../project:/contracts/CCNft/CCNft.sol:37"
          },
          {
            "contract": "CCNft",
            "label": "_tokenIds",
            "type": "t_struct(Counter)3931_storage",
            "src": "../project:/contracts/CCNft/CCNft.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC721Upgradeable)3162": {
            "label": "contract IERC721Upgradeable"
          },
          "t_struct(Counter)3931_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(RoyaltyInfo)3410_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)3410_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(NftItem)9838_storage": {
            "label": "struct CCNftStorage.NftItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "creator",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(NftItem)9838_storage)": {
            "label": "mapping(uint256 => struct CCNftStorage.NftItem)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "899fa10c567a0d027ec0bfe93622a9ca1c5856feb6d209dee708181c2088a242": {
      "address": "0xE74EDbA8fD78dc6C4566B8f8bAc0681bf4769625",
      "txHash": "0x695860a87762ebcad0bf5d658788103afb6e53fa4ea87ce5ab69d342edea01d8",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "NftVendorStorage",
            "label": "collection",
            "type": "t_address",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:15"
          },
          {
            "contract": "NftVendorStorage",
            "label": "creator",
            "type": "t_address",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:16"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_allListedNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:17"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_allERC20Tokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:18"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_listedItems",
            "type": "t_struct(Counter)3487_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:20"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_listings",
            "type": "t_mapping(t_uint256,t_struct(Listing)13751_storage)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:22"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_proceeds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:23"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:25"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_excludedList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:27"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_acceptedTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:29"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_priceTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)2966_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2966_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(RoyaltyInfo)2966_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)2966_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_struct(Counter)3487_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Listing)13751_storage)": {
            "label": "mapping(uint256 => struct NftVendorStorage.Listing)"
          },
          "t_struct(Listing)13751_storage": {
            "label": "struct NftVendorStorage.Listing",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "06d78b31e30575fb64aac03913238a172d8e28834fb21cb3f3ee4204ecff600c": {
      "address": "0x2ef0d3Eb447168104CF820Fb97Acf805613A078e",
      "txHash": "0xf9588bd9fe2ea97a19b16345eff25e4f0584b4fd7e99244303e13528325c013d",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "CCNftStorage",
            "label": "_nftItem",
            "type": "t_struct(NftItem)9986_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:10"
          },
          {
            "contract": "CCNftStorage",
            "label": "_usedTokenURIs",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:13"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftItem",
            "type": "t_mapping(t_uint256,t_struct(NftItem)9986_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:15"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:17"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToOwnedIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:19"
          },
          {
            "contract": "CCNftStorage",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:21"
          },
          {
            "contract": "CCNftStorage",
            "label": "_tokensExtractionsByYear",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:23"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftCreator",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:26"
          },
          {
            "contract": "CCNftStorage",
            "label": "addressesFromTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:28"
          },
          {
            "contract": "CCNftStorage",
            "label": "_allNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:30"
          },
          {
            "contract": "NftOffersStorage",
            "label": "_offer",
            "type": "t_struct(Offer)12599_storage",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:13"
          },
          {
            "contract": "NftOffersStorage",
            "label": "collection",
            "type": "t_address",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:15"
          },
          {
            "contract": "NftOffersStorage",
            "label": "ccNftUpgradeableAddress",
            "type": "t_address",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:17"
          },
          {
            "contract": "NftOffersStorage",
            "label": "tokenIdToOffer",
            "type": "t_mapping(t_uint256,t_struct(Offer)12599_storage)",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:19"
          },
          {
            "contract": "NftOffersStorage",
            "label": "offerBidsFromTokenId",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:21"
          },
          {
            "contract": "NftOffersStorage",
            "label": "indexOfofferBidsFromAddress",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:23"
          },
          {
            "contract": "NftOffersStorage",
            "label": "hasBidFromTokenId",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:26"
          },
          {
            "contract": "NftOffersStorage",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:27"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "NftOffers",
            "label": "nftVendor",
            "type": "t_contract(NftVendor)13740",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:32"
          }
        ],
        "types": {
          "t_contract(NftVendor)13740": {
            "label": "contract NftVendor"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(Offer)12599_storage": {
            "label": "struct NftOffersStorage.Offer",
            "members": [
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "highestBid",
                "type": "t_uint256"
              },
              {
                "label": "highestBidder",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer)12599_storage)": {
            "label": "mapping(uint256 => struct NftOffersStorage.Offer)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(NftItem)9986_storage": {
            "label": "struct CCNftStorage.NftItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "creator",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(NftItem)9986_storage)": {
            "label": "mapping(uint256 => struct CCNftStorage.NftItem)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "09cb0fe1fd28650f0ad5bd5dd3aa8e172c4cc303f8b469a6d4dfa0e110b2acc3": {
      "address": "0xEAF7B2F5A951947462C5F195F56e7708901E4D7c",
      "txHash": "0xdd56b13d084fa1a41d807832b1fd783cbcb9c93a806e36c43ac369d40c09b770",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "NftVendorStorage",
            "label": "collection",
            "type": "t_address",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:15"
          },
          {
            "contract": "NftVendorStorage",
            "label": "creator",
            "type": "t_address",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:16"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_allListedNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:17"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_allERC20Tokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:18"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_listedItems",
            "type": "t_struct(Counter)3487_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:20"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_listings",
            "type": "t_mapping(t_uint256,t_struct(Listing)13751_storage)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:22"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_proceeds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:23"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:25"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_excludedList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:27"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_acceptedTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:29"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_priceTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)2966_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2966_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(RoyaltyInfo)2966_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)2966_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_struct(Counter)3487_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Listing)13751_storage)": {
            "label": "mapping(uint256 => struct NftVendorStorage.Listing)"
          },
          "t_struct(Listing)13751_storage": {
            "label": "struct NftVendorStorage.Listing",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "5759445308d7f174a3b5ad297dc0f96c57c812e9333c0c2ca50f4d11289567e2": {
      "address": "0x9C50bF56B3B913659106A74eAC6D0e7178F64E4E",
      "txHash": "0x4c58f1d14b5fb11631ad7c0eeff9d942a51dc00a1f23090b91e3f165e7a27192",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "NftVendorStorage",
            "label": "collection",
            "type": "t_address",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:15"
          },
          {
            "contract": "NftVendorStorage",
            "label": "creator",
            "type": "t_address",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:16"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_allListedNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:17"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_allERC20Tokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:18"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_listedItems",
            "type": "t_struct(Counter)3931_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:20"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_listings",
            "type": "t_mapping(t_uint256,t_struct(Listing)13659_storage)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:22"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_proceeds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:23"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:25"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_excludedList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:27"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_acceptedTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:29"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_priceTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)3410_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3410_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(RoyaltyInfo)3410_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)3410_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_struct(Counter)3931_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Listing)13659_storage)": {
            "label": "mapping(uint256 => struct NftVendorStorage.Listing)"
          },
          "t_struct(Listing)13659_storage": {
            "label": "struct NftVendorStorage.Listing",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "ad5940f4d04f790de825bac380df957c81051950254aec74aaf11b4588a49cea": {
      "address": "0x1D712643B36A30C47Bfa44A774cf77FCBE45cD31",
      "txHash": "0x9b2d1d808667a57c5567a40f2f323f3758573d1d313483b16c18a1ddab5fb904",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "NftVendorStorage",
            "label": "collection",
            "type": "t_address",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:15"
          },
          {
            "contract": "NftVendorStorage",
            "label": "creator",
            "type": "t_address",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:16"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_allListedNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:17"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_allERC20Tokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:18"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_listedItems",
            "type": "t_struct(Counter)3487_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:20"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_listings",
            "type": "t_mapping(t_uint256,t_struct(Listing)13754_storage)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:22"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_proceeds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:23"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:25"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_excludedList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:27"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_acceptedTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:29"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_priceTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)2966_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2966_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(RoyaltyInfo)2966_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)2966_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_struct(Counter)3487_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Listing)13754_storage)": {
            "label": "mapping(uint256 => struct NftVendorStorage.Listing)"
          },
          "t_struct(Listing)13754_storage": {
            "label": "struct NftVendorStorage.Listing",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "7415e030bfebfe67da1cddce835e9d413b3663e79df3bce0923e8eb2b3e3ae47": {
      "address": "0xc43547f74103731BB8562fF282394a9bc0F4c727",
      "txHash": "0xf297d6a88994f6aa6be9987e529642e49e1747a38e125fcbe0e9fda1b01eea4c",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "NftVendorStorage",
            "label": "collection",
            "type": "t_address",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:15"
          },
          {
            "contract": "NftVendorStorage",
            "label": "creator",
            "type": "t_address",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:16"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_allListedNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:17"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_allERC20Tokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:18"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_listedItems",
            "type": "t_struct(Counter)3931_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:20"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_listings",
            "type": "t_mapping(t_uint256,t_struct(Listing)13657_storage)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:22"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_proceeds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:23"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:25"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_excludedList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:27"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_acceptedTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:29"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_priceTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)3410_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3410_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(RoyaltyInfo)3410_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)3410_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_struct(Counter)3931_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Listing)13657_storage)": {
            "label": "mapping(uint256 => struct NftVendorStorage.Listing)"
          },
          "t_struct(Listing)13657_storage": {
            "label": "struct NftVendorStorage.Listing",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "7bd3822259d2d3e8fe91e45b74f48ecc1b3d8a0e1f5ee889676cb362843ce46d": {
      "address": "0xb69eca067B35E5dC0d65093E6906588cc6cc2794",
      "txHash": "0xb089cae6379014ccb0a782a2d9f071b06c3892dddd25a68642f6aa473580f573",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "CCNftStorage",
            "label": "_nftItem",
            "type": "t_struct(NftItem)9838_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:10"
          },
          {
            "contract": "CCNftStorage",
            "label": "_usedTokenURIs",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:13"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftItem",
            "type": "t_mapping(t_uint256,t_struct(NftItem)9838_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:15"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:17"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToOwnedIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:19"
          },
          {
            "contract": "CCNftStorage",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:21"
          },
          {
            "contract": "CCNftStorage",
            "label": "_tokensExtractionsByYear",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:23"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftCreator",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:26"
          },
          {
            "contract": "CCNftStorage",
            "label": "addressesFromTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:28"
          },
          {
            "contract": "CCNftStorage",
            "label": "_allNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:30"
          },
          {
            "contract": "NftOffersStorage",
            "label": "_offer",
            "type": "t_struct(Offer)12512_storage",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:13"
          },
          {
            "contract": "NftOffersStorage",
            "label": "collection",
            "type": "t_address",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:15"
          },
          {
            "contract": "NftOffersStorage",
            "label": "ccNftUpgradeableAddress",
            "type": "t_address",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:17"
          },
          {
            "contract": "NftOffersStorage",
            "label": "tokenIdToOffer",
            "type": "t_mapping(t_uint256,t_struct(Offer)12512_storage)",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:19"
          },
          {
            "contract": "NftOffersStorage",
            "label": "offerBidsFromTokenId",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:21"
          },
          {
            "contract": "NftOffersStorage",
            "label": "indexOfofferBidsFromAddress",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:23"
          },
          {
            "contract": "NftOffersStorage",
            "label": "hasBidFromTokenId",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:26"
          },
          {
            "contract": "NftOffersStorage",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:27"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "NftOffers",
            "label": "nftVendor",
            "type": "t_contract(NftVendor)13645",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:32"
          }
        ],
        "types": {
          "t_contract(NftVendor)13645": {
            "label": "contract NftVendor"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(Offer)12512_storage": {
            "label": "struct NftOffersStorage.Offer",
            "members": [
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "highestBid",
                "type": "t_uint256"
              },
              {
                "label": "highestBidder",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer)12512_storage)": {
            "label": "mapping(uint256 => struct NftOffersStorage.Offer)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(NftItem)9838_storage": {
            "label": "struct CCNftStorage.NftItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "creator",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(NftItem)9838_storage)": {
            "label": "mapping(uint256 => struct CCNftStorage.NftItem)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "6c6094d7f18a2124857aebeb6c7bb1a4cb8b7b9aaf645e774d91fe108ab271cc": {
      "address": "0x4FcFa41F48eC1eb0586f4f044f19CB82674DF6c8",
      "txHash": "0xe71d646e1bf5793ad5ccbc3483f42057a7bfbea1c9a22b11a2f326fe2dc1d86b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "NftFractionsStorage",
            "label": "tokens",
            "type": "t_mapping(t_address,t_struct(TokenPaymentInfo)11685_storage)",
            "src": "../project:/contracts/NftFractions/NftFractionsStorage.sol:16"
          },
          {
            "contract": "NftFractionsStorage",
            "label": "activeAddressVendor",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/NftFractions/NftFractionsStorage.sol:17"
          },
          {
            "contract": "NftFractionsStorage",
            "label": "vaultCount",
            "type": "t_uint256",
            "src": "../project:/contracts/NftFractions/NftFractionsStorage.sol:20"
          },
          {
            "contract": "NftFractionsStorage",
            "label": "tokenAddressCreated",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/NftFractions/NftFractionsStorage.sol:21"
          },
          {
            "contract": "NftFractionsStorage",
            "label": "vaults",
            "type": "t_mapping(t_uint256,t_struct(Vault)11676_storage)",
            "src": "../project:/contracts/NftFractions/NftFractionsStorage.sol:24"
          },
          {
            "contract": "NftFractionsStorage",
            "label": "nftToVault",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "../project:/contracts/NftFractions/NftFractionsStorage.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "NftFractionsFactory",
            "label": "logic",
            "type": "t_address",
            "src": "../project:/contracts/NftFractions/NftFractionsFactory.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_struct(TokenPaymentInfo)11685_storage)": {
            "label": "mapping(address => struct NftFractionsStorage.TokenPaymentInfo)"
          },
          "t_struct(TokenPaymentInfo)11685_storage": {
            "label": "struct NftFractionsStorage.TokenPaymentInfo",
            "members": [
              {
                "label": "tokenAddress",
                "type": "t_address"
              },
              {
                "label": "totalSupply",
                "type": "t_uint256"
              },
              {
                "label": "listingPrice",
                "type": "t_uint256"
              },
              {
                "label": "enableSell",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_struct(Vault)11676_storage)": {
            "label": "mapping(uint256 => struct NftFractionsStorage.Vault)"
          },
          "t_struct(Vault)11676_storage": {
            "label": "struct NftFractionsStorage.Vault",
            "members": [
              {
                "label": "vaultAddress",
                "type": "t_address"
              },
              {
                "label": "count",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          }
        }
      }
    },
    "1f4ea5e09beec392deae5f65a0b188b15e1ffc4724e9cfa0cc88bdf99ac86f52": {
      "address": "0x917bFa4af2BbC6c4e0bDd4bb1d1351de713922aE",
      "txHash": "0x885045ba8d3c8b8101a5f481c43ea523111867f7d8f3e3691fb1042a3e2d6578",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "NftFractionsStorage",
            "label": "tokens",
            "type": "t_mapping(t_address,t_struct(TokenPaymentInfo)11685_storage)",
            "src": "../project:/contracts/NftFractions/NftFractionsStorage.sol:16"
          },
          {
            "contract": "NftFractionsStorage",
            "label": "activeAddressVendor",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/NftFractions/NftFractionsStorage.sol:17"
          },
          {
            "contract": "NftFractionsStorage",
            "label": "vaultCount",
            "type": "t_uint256",
            "src": "../project:/contracts/NftFractions/NftFractionsStorage.sol:20"
          },
          {
            "contract": "NftFractionsStorage",
            "label": "tokenAddressCreated",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/NftFractions/NftFractionsStorage.sol:21"
          },
          {
            "contract": "NftFractionsStorage",
            "label": "vaults",
            "type": "t_mapping(t_uint256,t_struct(Vault)11676_storage)",
            "src": "../project:/contracts/NftFractions/NftFractionsStorage.sol:24"
          },
          {
            "contract": "NftFractionsStorage",
            "label": "nftToVault",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "../project:/contracts/NftFractions/NftFractionsStorage.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(TokenPaymentInfo)11685_storage)": {
            "label": "mapping(address => struct NftFractionsStorage.TokenPaymentInfo)"
          },
          "t_struct(TokenPaymentInfo)11685_storage": {
            "label": "struct NftFractionsStorage.TokenPaymentInfo",
            "members": [
              {
                "label": "tokenAddress",
                "type": "t_address"
              },
              {
                "label": "totalSupply",
                "type": "t_uint256"
              },
              {
                "label": "listingPrice",
                "type": "t_uint256"
              },
              {
                "label": "enableSell",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_struct(Vault)11676_storage)": {
            "label": "mapping(uint256 => struct NftFractionsStorage.Vault)"
          },
          "t_struct(Vault)11676_storage": {
            "label": "struct NftFractionsStorage.Vault",
            "members": [
              {
                "label": "vaultAddress",
                "type": "t_address"
              },
              {
                "label": "count",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          }
        }
      }
    },
    "788b56120475e88751d4f7332531dbc58503575c63e95d51d48d5ca977b8cd83": {
      "address": "0xB420d26119d0Dd0Ae1576db07E35decCD967B6A6",
      "txHash": "0x7987a6ba89f0f858ecf670596a916e2d85ee0d2247c50e632fd5072a8417acf7",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "CCNftStorage",
            "label": "_nftItem",
            "type": "t_struct(NftItem)9841_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:10"
          },
          {
            "contract": "CCNftStorage",
            "label": "_usedTokenURIs",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:13"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftItem",
            "type": "t_mapping(t_uint256,t_struct(NftItem)9841_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:15"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:17"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToOwnedIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:19"
          },
          {
            "contract": "CCNftStorage",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:21"
          },
          {
            "contract": "CCNftStorage",
            "label": "_tokensExtractionsByYear",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:23"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftCreator",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:26"
          },
          {
            "contract": "CCNftStorage",
            "label": "addressesFromTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:28"
          },
          {
            "contract": "CCNftStorage",
            "label": "_allNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:30"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)3410_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3410_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CCNft",
            "label": "txFeeToken",
            "type": "t_address",
            "src": "../project:/contracts/CCNft/CCNft.sol:32"
          },
          {
            "contract": "CCNft",
            "label": "_tokenIds",
            "type": "t_struct(Counter)3931_storage",
            "src": "../project:/contracts/CCNft/CCNft.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)3931_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(RoyaltyInfo)3410_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)3410_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(NftItem)9841_storage": {
            "label": "struct CCNftStorage.NftItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "creator",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(NftItem)9841_storage)": {
            "label": "mapping(uint256 => struct CCNftStorage.NftItem)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "d81a56d0a6d4b0f165b0b645b288352d0f6ef0818cad98b260ec45a60a1e68e3": {
      "address": "0xeeba41f378460D4bC25cDD7877Cf51356F2aCB61",
      "txHash": "0xc9cbd163fa4d5554ba627c34c8c4dced258409223d00d8bb0cbf6576e44c4a95",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "CCNftStorage",
            "label": "_nftItem",
            "type": "t_struct(NftItem)9853_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:10"
          },
          {
            "contract": "CCNftStorage",
            "label": "_usedTokenURIs",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:13"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftItem",
            "type": "t_mapping(t_uint256,t_struct(NftItem)9853_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:15"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:17"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToOwnedIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:19"
          },
          {
            "contract": "CCNftStorage",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:21"
          },
          {
            "contract": "CCNftStorage",
            "label": "_tokensExtractionsByYear",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:23"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftCreator",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:26"
          },
          {
            "contract": "CCNftStorage",
            "label": "addressesFromTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:28"
          },
          {
            "contract": "CCNftStorage",
            "label": "_allNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:30"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)3410_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3410_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CCNft",
            "label": "txFeeToken",
            "type": "t_address",
            "src": "../project:/contracts/CCNft/CCNft.sol:32"
          },
          {
            "contract": "CCNft",
            "label": "_tokenIds",
            "type": "t_struct(Counter)3931_storage",
            "src": "../project:/contracts/CCNft/CCNft.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)3931_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(RoyaltyInfo)3410_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)3410_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(NftItem)9853_storage": {
            "label": "struct CCNftStorage.NftItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "creator",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(NftItem)9853_storage)": {
            "label": "mapping(uint256 => struct CCNftStorage.NftItem)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "d724d8df2ec4dbada7712e02a3cf3798aa7b0c0cf9ce9ad2a7d4d9e511d69c32": {
      "address": "0xb87F5bC01291836DA07219bb0bf0F4649c5D4421",
      "txHash": "0xefaa97e256a02b24d553446755a7953fea729f261835cdfc4d23d398404c4d89",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "CCNftStorage",
            "label": "_nftItem",
            "type": "t_struct(NftItem)9855_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:10"
          },
          {
            "contract": "CCNftStorage",
            "label": "_usedTokenURIs",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:13"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftItem",
            "type": "t_mapping(t_uint256,t_struct(NftItem)9855_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:15"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:17"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToOwnedIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:19"
          },
          {
            "contract": "CCNftStorage",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:21"
          },
          {
            "contract": "CCNftStorage",
            "label": "_tokensExtractionsByYear",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:23"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftCreator",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:26"
          },
          {
            "contract": "CCNftStorage",
            "label": "addressesFromTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:28"
          },
          {
            "contract": "CCNftStorage",
            "label": "_allNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:30"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)3410_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3410_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CCNft",
            "label": "txFeeToken",
            "type": "t_address",
            "src": "../project:/contracts/CCNft/CCNft.sol:32"
          },
          {
            "contract": "CCNft",
            "label": "_tokenIds",
            "type": "t_struct(Counter)3931_storage",
            "src": "../project:/contracts/CCNft/CCNft.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)3931_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(RoyaltyInfo)3410_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)3410_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(NftItem)9855_storage": {
            "label": "struct CCNftStorage.NftItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "creator",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(NftItem)9855_storage)": {
            "label": "mapping(uint256 => struct CCNftStorage.NftItem)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "1b5607f5302c6c4d35db69accea668aadc32205bb1c4c498232558b37daf9bc7": {
      "address": "0x56C173D7e7342e724911665900707CA742e850D6",
      "txHash": "0x2faa18ffff979e3a3c9a6e97b63c5d93127d8789ef4067ea080f1c756d08d513",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "CCNftStorage",
            "label": "_nftItem",
            "type": "t_struct(NftItem)9863_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:10"
          },
          {
            "contract": "CCNftStorage",
            "label": "_usedTokenURIs",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:13"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftItem",
            "type": "t_mapping(t_uint256,t_struct(NftItem)9863_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:15"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:17"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToOwnedIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:19"
          },
          {
            "contract": "CCNftStorage",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:21"
          },
          {
            "contract": "CCNftStorage",
            "label": "_tokensExtractionsByYear",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:23"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftCreator",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:26"
          },
          {
            "contract": "CCNftStorage",
            "label": "addressesFromTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:28"
          },
          {
            "contract": "CCNftStorage",
            "label": "_allNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:30"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)3410_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3410_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CCNft",
            "label": "txFeeToken",
            "type": "t_address",
            "src": "../project:/contracts/CCNft/CCNft.sol:32"
          },
          {
            "contract": "CCNft",
            "label": "_tokenIds",
            "type": "t_struct(Counter)3931_storage",
            "src": "../project:/contracts/CCNft/CCNft.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)3931_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(RoyaltyInfo)3410_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)3410_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(NftItem)9863_storage": {
            "label": "struct CCNftStorage.NftItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "creator",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(NftItem)9863_storage)": {
            "label": "mapping(uint256 => struct CCNftStorage.NftItem)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "ca1f20a8ed799456cf7eb9cad30f2a75441b1a72ebff3e53c426db1c43edd7a8": {
      "address": "0x13cD7Ad82b22f9236439655e445A4d14Dc9E9818",
      "txHash": "0xc63f90029dc3b370ad4468efe0df6b093cee595229eefc2d5a4c195bdfb93c6d",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "CCNftStorage",
            "label": "_nftItem",
            "type": "t_struct(NftItem)9867_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:10"
          },
          {
            "contract": "CCNftStorage",
            "label": "_usedTokenURIs",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:13"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftItem",
            "type": "t_mapping(t_uint256,t_struct(NftItem)9867_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:15"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:17"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToOwnedIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:19"
          },
          {
            "contract": "CCNftStorage",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:21"
          },
          {
            "contract": "CCNftStorage",
            "label": "_tokensExtractionsByYear",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:23"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftCreator",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:26"
          },
          {
            "contract": "CCNftStorage",
            "label": "addressesFromTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:28"
          },
          {
            "contract": "CCNftStorage",
            "label": "_allNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:30"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)3410_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3410_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CCNft",
            "label": "txFeeToken",
            "type": "t_address",
            "src": "../project:/contracts/CCNft/CCNft.sol:32"
          },
          {
            "contract": "CCNft",
            "label": "_tokenIds",
            "type": "t_struct(Counter)3931_storage",
            "src": "../project:/contracts/CCNft/CCNft.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)3931_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(RoyaltyInfo)3410_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)3410_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(NftItem)9867_storage": {
            "label": "struct CCNftStorage.NftItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "creator",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(NftItem)9867_storage)": {
            "label": "mapping(uint256 => struct CCNftStorage.NftItem)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "255cd9f167192c9756ee05b1ffb3b2b06e670281fcfa821536e9c01e4c68f175": {
      "address": "0xC75615Fd674B9d28e320e3e286cD33fcC825Db05",
      "txHash": "0x6d530ccce42fac23503557ec0b7a5d0735c0f28d23ba54d0c65f89af874e45ac",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "CCNftStorage",
            "label": "_nftItem",
            "type": "t_struct(NftItem)9852_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:10"
          },
          {
            "contract": "CCNftStorage",
            "label": "_usedTokenURIs",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:13"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftItem",
            "type": "t_mapping(t_uint256,t_struct(NftItem)9852_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:15"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:17"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToOwnedIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:19"
          },
          {
            "contract": "CCNftStorage",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:21"
          },
          {
            "contract": "CCNftStorage",
            "label": "_tokensExtractionsByYear",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:23"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftCreator",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:26"
          },
          {
            "contract": "CCNftStorage",
            "label": "addressesFromTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:28"
          },
          {
            "contract": "CCNftStorage",
            "label": "_allNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:30"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)3410_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3410_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CCNft",
            "label": "txFeeToken",
            "type": "t_address",
            "src": "../project:/contracts/CCNft/CCNft.sol:32"
          },
          {
            "contract": "CCNft",
            "label": "_tokenIds",
            "type": "t_struct(Counter)3931_storage",
            "src": "../project:/contracts/CCNft/CCNft.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)3931_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(RoyaltyInfo)3410_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)3410_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(NftItem)9852_storage": {
            "label": "struct CCNftStorage.NftItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "creator",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(NftItem)9852_storage)": {
            "label": "mapping(uint256 => struct CCNftStorage.NftItem)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "6bfe46860c0d6e7b09aa6a1a68dfa5293a58dfdde1e519495202705e8d34f4ec": {
      "address": "0x16551f112E9C9d74Fe8f1fC98CfE29b329DE375B",
      "txHash": "0x6013d815472f1beffb0b75c45ff84c44dd9206231bc5952f1e7321e8f87de351",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "NftVendorStorage",
            "label": "collection",
            "type": "t_address",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:15"
          },
          {
            "contract": "NftVendorStorage",
            "label": "creator",
            "type": "t_address",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:16"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_allListedNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:17"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_allERC20Tokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:18"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_listedItems",
            "type": "t_struct(Counter)3931_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:20"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_listings",
            "type": "t_mapping(t_uint256,t_struct(Listing)13670_storage)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:22"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_proceeds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:23"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:25"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_excludedList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:27"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_acceptedTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:29"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_priceTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)3410_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3410_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(RoyaltyInfo)3410_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)3410_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_struct(Counter)3931_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Listing)13670_storage)": {
            "label": "mapping(uint256 => struct NftVendorStorage.Listing)"
          },
          "t_struct(Listing)13670_storage": {
            "label": "struct NftVendorStorage.Listing",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "0c36d0e54fe0b4df55489b4db43bd168a7de3b122be3038a3c68c73575f86c8d": {
      "address": "0xdad4379eeFF6304538cb9cdd9c7FE66B8A9087FE",
      "txHash": "0x9b33ad09a2bb82fee8f9c62f7fa8ebed77dde1ffcb79eb898075c32606112516",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "NftVendorStorage",
            "label": "collection",
            "type": "t_address",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:15"
          },
          {
            "contract": "NftVendorStorage",
            "label": "creator",
            "type": "t_address",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:16"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_allListedNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:17"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_allERC20Tokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:18"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_listedItems",
            "type": "t_struct(Counter)3931_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:20"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_listings",
            "type": "t_mapping(t_uint256,t_struct(Listing)13686_storage)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:22"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_proceeds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:23"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:25"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_excludedList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:27"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_acceptedTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:29"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_priceTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)3410_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3410_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(RoyaltyInfo)3410_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)3410_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_struct(Counter)3931_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Listing)13686_storage)": {
            "label": "mapping(uint256 => struct NftVendorStorage.Listing)"
          },
          "t_struct(Listing)13686_storage": {
            "label": "struct NftVendorStorage.Listing",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "e95877540d2499d10ed46f4b79937e8a8b0d6bbe78928cd566477b908f411115": {
      "address": "0xB9B71Ccf7d930A20a72Dc5BE4EA3A94ED8542232",
      "txHash": "0x8c159fd383ef8b7817ca0aa0b5c71f87286efc585e0c1b9e479643f3591ed52d",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "NftVendorStorage",
            "label": "collection",
            "type": "t_address",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:15"
          },
          {
            "contract": "NftVendorStorage",
            "label": "creator",
            "type": "t_address",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:16"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_allListedNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:17"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_allERC20Tokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:18"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_listedItems",
            "type": "t_struct(Counter)3931_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:20"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_listings",
            "type": "t_mapping(t_uint256,t_struct(Listing)13675_storage)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:22"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_proceeds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:23"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:25"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_excludedList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:27"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_acceptedTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:29"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_priceTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)3410_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3410_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(RoyaltyInfo)3410_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)3410_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_struct(Counter)3931_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Listing)13675_storage)": {
            "label": "mapping(uint256 => struct NftVendorStorage.Listing)"
          },
          "t_struct(Listing)13675_storage": {
            "label": "struct NftVendorStorage.Listing",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "6aafdc84df01b0abc00269e5db3fcb1e6e9ef3ef3227c5711e6a7da09c1e7043": {
      "address": "0x70A6B0B910F95A1e9C5bDC2c8904AE226D60Ca48",
      "txHash": "0x86789174810ab9fd06cee92e32d0620f7d61e1355d70eaf90f9d8a65ff23a47d",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "CCNftStorage",
            "label": "_nftItem",
            "type": "t_struct(NftItem)9868_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:10"
          },
          {
            "contract": "CCNftStorage",
            "label": "_usedTokenURIs",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:13"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftItem",
            "type": "t_mapping(t_uint256,t_struct(NftItem)9868_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:15"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:17"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToOwnedIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:19"
          },
          {
            "contract": "CCNftStorage",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:21"
          },
          {
            "contract": "CCNftStorage",
            "label": "_tokensExtractionsByYear",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:23"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftCreator",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:26"
          },
          {
            "contract": "CCNftStorage",
            "label": "addressesFromTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:28"
          },
          {
            "contract": "CCNftStorage",
            "label": "_allNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:30"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)3417_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3417_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CCNft",
            "label": "txFeeToken",
            "type": "t_address",
            "src": "../project:/contracts/CCNft/CCNft.sol:32"
          },
          {
            "contract": "CCNft",
            "label": "_tokenIds",
            "type": "t_struct(Counter)3938_storage",
            "src": "../project:/contracts/CCNft/CCNft.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)3938_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(RoyaltyInfo)3417_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)3417_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(NftItem)9868_storage": {
            "label": "struct CCNftStorage.NftItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "creator",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(NftItem)9868_storage)": {
            "label": "mapping(uint256 => struct CCNftStorage.NftItem)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "ed5a0dfb033d471233548d592bbcfeca90f538443796a60095237b491084010b": {
      "address": "0xD275415867A2a78C96dF795C23c5bac7135D7484",
      "txHash": "0xe512d04b308524e91f4f6514c0c01722ab68cb1076da5a08f28b45dfa0dc7df7",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "CCNftStorage",
            "label": "_nftItem",
            "type": "t_struct(NftItem)9868_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:10"
          },
          {
            "contract": "CCNftStorage",
            "label": "_usedTokenURIs",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:13"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftItem",
            "type": "t_mapping(t_uint256,t_struct(NftItem)9868_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:15"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:17"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToOwnedIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:19"
          },
          {
            "contract": "CCNftStorage",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:21"
          },
          {
            "contract": "CCNftStorage",
            "label": "_tokensExtractionsByYear",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:23"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftCreator",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:26"
          },
          {
            "contract": "CCNftStorage",
            "label": "addressesFromTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:28"
          },
          {
            "contract": "CCNftStorage",
            "label": "_allNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:30"
          },
          {
            "contract": "NftOffersStorage",
            "label": "_offer",
            "type": "t_struct(Offer)12516_storage",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:13"
          },
          {
            "contract": "NftOffersStorage",
            "label": "collection",
            "type": "t_address",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:15"
          },
          {
            "contract": "NftOffersStorage",
            "label": "ccNftUpgradeableAddress",
            "type": "t_address",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:17"
          },
          {
            "contract": "NftOffersStorage",
            "label": "tokenIdToOffer",
            "type": "t_mapping(t_uint256,t_struct(Offer)12516_storage)",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:19"
          },
          {
            "contract": "NftOffersStorage",
            "label": "offerBidsFromTokenId",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:21"
          },
          {
            "contract": "NftOffersStorage",
            "label": "indexOfofferBidsFromAddress",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:23"
          },
          {
            "contract": "NftOffersStorage",
            "label": "hasBidFromTokenId",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:26"
          },
          {
            "contract": "NftOffersStorage",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:27"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "NftOffers",
            "label": "nftVendor",
            "type": "t_contract(NftVendor)13706",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:32"
          }
        ],
        "types": {
          "t_contract(NftVendor)13706": {
            "label": "contract NftVendor"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(Offer)12516_storage": {
            "label": "struct NftOffersStorage.Offer",
            "members": [
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "highestBid",
                "type": "t_uint256"
              },
              {
                "label": "highestBidder",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer)12516_storage)": {
            "label": "mapping(uint256 => struct NftOffersStorage.Offer)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(NftItem)9868_storage": {
            "label": "struct CCNftStorage.NftItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "creator",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(NftItem)9868_storage)": {
            "label": "mapping(uint256 => struct CCNftStorage.NftItem)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "cbb79061086d04df82079ff55b83f5023375fd46e4cf29fb14f50a79dc4e2ea7": {
      "address": "0x3bB604F2c691EB129A5C4A1Fbd377F5E3B20f230",
      "txHash": "0x043c2f8e9c19d14327a3fbb7deba9c6da712ea140fea0fd3a581320e0dcb1efb",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "CCNftStorage",
            "label": "_nftItem",
            "type": "t_struct(NftItem)9868_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:10"
          },
          {
            "contract": "CCNftStorage",
            "label": "_usedTokenURIs",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:13"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftItem",
            "type": "t_mapping(t_uint256,t_struct(NftItem)9868_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:15"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:17"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToOwnedIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:19"
          },
          {
            "contract": "CCNftStorage",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:21"
          },
          {
            "contract": "CCNftStorage",
            "label": "_tokensExtractionsByYear",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:23"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftCreator",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:26"
          },
          {
            "contract": "CCNftStorage",
            "label": "addressesFromTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:28"
          },
          {
            "contract": "CCNftStorage",
            "label": "_allNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:30"
          },
          {
            "contract": "NftOffersStorage",
            "label": "_offer",
            "type": "t_struct(Offer)12531_storage",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:13"
          },
          {
            "contract": "NftOffersStorage",
            "label": "collection",
            "type": "t_address",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:15"
          },
          {
            "contract": "NftOffersStorage",
            "label": "ccNftUpgradeableAddress",
            "type": "t_address",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:17"
          },
          {
            "contract": "NftOffersStorage",
            "label": "tokenIdToOffer",
            "type": "t_mapping(t_uint256,t_struct(Offer)12531_storage)",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:19"
          },
          {
            "contract": "NftOffersStorage",
            "label": "offerBidsFromTokenId",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:21"
          },
          {
            "contract": "NftOffersStorage",
            "label": "indexOfofferBidsFromAddress",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:23"
          },
          {
            "contract": "NftOffersStorage",
            "label": "hasBidFromTokenId",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:26"
          },
          {
            "contract": "NftOffersStorage",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:27"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "NftOffers",
            "label": "nftVendor",
            "type": "t_contract(NftVendor)13734",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:32"
          }
        ],
        "types": {
          "t_contract(NftVendor)13734": {
            "label": "contract NftVendor"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(Offer)12531_storage": {
            "label": "struct NftOffersStorage.Offer",
            "members": [
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "highestBid",
                "type": "t_uint256"
              },
              {
                "label": "highestBidder",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer)12531_storage)": {
            "label": "mapping(uint256 => struct NftOffersStorage.Offer)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(NftItem)9868_storage": {
            "label": "struct CCNftStorage.NftItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "creator",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(NftItem)9868_storage)": {
            "label": "mapping(uint256 => struct CCNftStorage.NftItem)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "116da1cc1737988cae5be96a9b485d95d8e7246743b20ab317312f19a020eff0": {
      "address": "0x9dDcD4Fdd7E4e9845C97B3726Fc00848B3873d23",
      "txHash": "0x5f0d0ac898396c973658e4c43b99f8b80a2aa94dc65f5cdbbacfad731b84c2ba",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "CCNftStorage",
            "label": "_nftItem",
            "type": "t_struct(NftItem)9868_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:10"
          },
          {
            "contract": "CCNftStorage",
            "label": "_usedTokenURIs",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:13"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftItem",
            "type": "t_mapping(t_uint256,t_struct(NftItem)9868_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:15"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:17"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToOwnedIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:19"
          },
          {
            "contract": "CCNftStorage",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:21"
          },
          {
            "contract": "CCNftStorage",
            "label": "_tokensExtractionsByYear",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:23"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftCreator",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:26"
          },
          {
            "contract": "CCNftStorage",
            "label": "addressesFromTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:28"
          },
          {
            "contract": "CCNftStorage",
            "label": "_allNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:30"
          },
          {
            "contract": "NftOffersStorage",
            "label": "_offer",
            "type": "t_struct(Offer)12416_storage",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:13"
          },
          {
            "contract": "NftOffersStorage",
            "label": "tokenIdToOffer",
            "type": "t_mapping(t_uint256,t_struct(Offer)12416_storage)",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:16"
          },
          {
            "contract": "NftOffersStorage",
            "label": "offerBidsFromTokenId",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:18"
          },
          {
            "contract": "NftOffersStorage",
            "label": "indexOfofferBidsFromAddress",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:20"
          },
          {
            "contract": "NftOffersStorage",
            "label": "hasBidFromTokenId",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:23"
          },
          {
            "contract": "NftOffersStorage",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:24"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "NftOffers",
            "label": "collection",
            "type": "t_address",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:32"
          },
          {
            "contract": "NftOffers",
            "label": "nftVendor",
            "type": "t_contract(NftVendor)13647",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(NftVendor)13647": {
            "label": "contract NftVendor"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(Offer)12416_storage": {
            "label": "struct NftOffersStorage.Offer",
            "members": [
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "highestBid",
                "type": "t_uint256"
              },
              {
                "label": "highestBidder",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer)12416_storage)": {
            "label": "mapping(uint256 => struct NftOffersStorage.Offer)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(NftItem)9868_storage": {
            "label": "struct CCNftStorage.NftItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "creator",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(NftItem)9868_storage)": {
            "label": "mapping(uint256 => struct CCNftStorage.NftItem)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "7eefc22aa83424184d16ad1768d43fc329aef93df900a3527e8e5118e8f98e66": {
      "address": "0xe1b448D062D7B377ED5deD812D86C27d9B4D1a26",
      "txHash": "0xb79b45f164e207c6afa2e43d47c85aacce1ca919792bdd9fb11282f00b995f3c",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "CCNftStorage",
            "label": "_nftItem",
            "type": "t_struct(NftItem)9868_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:10"
          },
          {
            "contract": "CCNftStorage",
            "label": "_usedTokenURIs",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:13"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftItem",
            "type": "t_mapping(t_uint256,t_struct(NftItem)9868_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:15"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:17"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToOwnedIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:19"
          },
          {
            "contract": "CCNftStorage",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:21"
          },
          {
            "contract": "CCNftStorage",
            "label": "_tokensExtractionsByYear",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:23"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftCreator",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:26"
          },
          {
            "contract": "CCNftStorage",
            "label": "addressesFromTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:28"
          },
          {
            "contract": "CCNftStorage",
            "label": "_allNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:30"
          },
          {
            "contract": "NftOffersStorage",
            "label": "_offer",
            "type": "t_struct(Offer)12434_storage",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:13"
          },
          {
            "contract": "NftOffersStorage",
            "label": "tokenIdToOffer",
            "type": "t_mapping(t_uint256,t_struct(Offer)12434_storage)",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:16"
          },
          {
            "contract": "NftOffersStorage",
            "label": "offerBidsFromTokenId",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:18"
          },
          {
            "contract": "NftOffersStorage",
            "label": "indexOfofferBidsFromAddress",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:20"
          },
          {
            "contract": "NftOffersStorage",
            "label": "hasBidFromTokenId",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:23"
          },
          {
            "contract": "NftOffersStorage",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:24"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "NftOffers",
            "label": "collection",
            "type": "t_address",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:32"
          },
          {
            "contract": "NftOffers",
            "label": "nftVendor",
            "type": "t_contract(NftVendor)13665",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(NftVendor)13665": {
            "label": "contract NftVendor"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(Offer)12434_storage": {
            "label": "struct NftOffersStorage.Offer",
            "members": [
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "highestBid",
                "type": "t_uint256"
              },
              {
                "label": "highestBidder",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer)12434_storage)": {
            "label": "mapping(uint256 => struct NftOffersStorage.Offer)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(NftItem)9868_storage": {
            "label": "struct CCNftStorage.NftItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "creator",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(NftItem)9868_storage)": {
            "label": "mapping(uint256 => struct CCNftStorage.NftItem)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "b6f565451ffb8e042116b432d75f1c41043297ed7d4bb3201bbee2e7889d7126": {
      "address": "0xe5a1eF07232900B13806dB5B0B83812f076C0D33",
      "txHash": "0x37358bad2aa9e9df4e0c02c6a01fd513e1010f1f1215de596af5843fb579b8ff",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "CCNftStorage",
            "label": "_nftItem",
            "type": "t_struct(NftItem)9868_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:10"
          },
          {
            "contract": "CCNftStorage",
            "label": "_usedTokenURIs",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:13"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftItem",
            "type": "t_mapping(t_uint256,t_struct(NftItem)9868_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:15"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:17"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToOwnedIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:19"
          },
          {
            "contract": "CCNftStorage",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:21"
          },
          {
            "contract": "CCNftStorage",
            "label": "_tokensExtractionsByYear",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:23"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftCreator",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:26"
          },
          {
            "contract": "CCNftStorage",
            "label": "addressesFromTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:28"
          },
          {
            "contract": "CCNftStorage",
            "label": "_allNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:30"
          },
          {
            "contract": "NftOffersStorage",
            "label": "_offer",
            "type": "t_struct(Offer)12483_storage",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:13"
          },
          {
            "contract": "NftOffersStorage",
            "label": "tokenIdToOffer",
            "type": "t_mapping(t_uint256,t_struct(Offer)12483_storage)",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:16"
          },
          {
            "contract": "NftOffersStorage",
            "label": "offerBidsFromTokenId",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:18"
          },
          {
            "contract": "NftOffersStorage",
            "label": "indexOfofferBidsFromAddress",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:20"
          },
          {
            "contract": "NftOffersStorage",
            "label": "hasBidFromTokenId",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:23"
          },
          {
            "contract": "NftOffersStorage",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:24"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "NftOffers",
            "label": "collection",
            "type": "t_address",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:32"
          },
          {
            "contract": "NftOffers",
            "label": "nftVendor",
            "type": "t_contract(NftVendor)13714",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(NftVendor)13714": {
            "label": "contract NftVendor"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(Offer)12483_storage": {
            "label": "struct NftOffersStorage.Offer",
            "members": [
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "highestBid",
                "type": "t_uint256"
              },
              {
                "label": "highestBidder",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer)12483_storage)": {
            "label": "mapping(uint256 => struct NftOffersStorage.Offer)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(NftItem)9868_storage": {
            "label": "struct CCNftStorage.NftItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "creator",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(NftItem)9868_storage)": {
            "label": "mapping(uint256 => struct CCNftStorage.NftItem)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "c343d22f6d30e7652cd78027ac7edea180075bcde203c1b8b7d58832894a8104": {
      "address": "0x66018b0570c703Eba0809f38c65EDed40ff4aDC8",
      "txHash": "0xc72af962583190e7a5e7cff0ec61333f8449219274c0293d9b593b7647a92ae2",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "CCNftStorage",
            "label": "_nftItem",
            "type": "t_struct(NftItem)9868_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:10"
          },
          {
            "contract": "CCNftStorage",
            "label": "_usedTokenURIs",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:13"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftItem",
            "type": "t_mapping(t_uint256,t_struct(NftItem)9868_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:15"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:17"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToOwnedIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:19"
          },
          {
            "contract": "CCNftStorage",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:21"
          },
          {
            "contract": "CCNftStorage",
            "label": "_tokensExtractionsByYear",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:23"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftCreator",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:26"
          },
          {
            "contract": "CCNftStorage",
            "label": "addressesFromTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:28"
          },
          {
            "contract": "CCNftStorage",
            "label": "_allNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:30"
          },
          {
            "contract": "NftOffersStorage",
            "label": "_offer",
            "type": "t_struct(Offer)12520_storage",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:13"
          },
          {
            "contract": "NftOffersStorage",
            "label": "tokenIdToOffer",
            "type": "t_mapping(t_uint256,t_struct(Offer)12520_storage)",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:16"
          },
          {
            "contract": "NftOffersStorage",
            "label": "offerBidsFromTokenId",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:18"
          },
          {
            "contract": "NftOffersStorage",
            "label": "indexOfofferBidsFromAddress",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:20"
          },
          {
            "contract": "NftOffersStorage",
            "label": "hasBidFromTokenId",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:23"
          },
          {
            "contract": "NftOffersStorage",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:24"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "NftOffers",
            "label": "collection",
            "type": "t_address",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:32"
          },
          {
            "contract": "NftOffers",
            "label": "nftVendor",
            "type": "t_contract(NftVendor)13751",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(NftVendor)13751": {
            "label": "contract NftVendor"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(Offer)12520_storage": {
            "label": "struct NftOffersStorage.Offer",
            "members": [
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "highestBid",
                "type": "t_uint256"
              },
              {
                "label": "highestBidder",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer)12520_storage)": {
            "label": "mapping(uint256 => struct NftOffersStorage.Offer)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(NftItem)9868_storage": {
            "label": "struct CCNftStorage.NftItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "creator",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(NftItem)9868_storage)": {
            "label": "mapping(uint256 => struct CCNftStorage.NftItem)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "c24151d50033867a07b5cab2e4986ff5e4cfb84518834ac130bbafe156498ac1": {
      "address": "0x304Ef3986Eb6009a884615B3EDC5bdc3fB9950b0",
      "txHash": "0x1de8501cd940dad70886ed78d8bfe45815163f0a9a96871712a5b430761aef46",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "CCNftStorage",
            "label": "_nftItem",
            "type": "t_struct(NftItem)9868_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:10"
          },
          {
            "contract": "CCNftStorage",
            "label": "_usedTokenURIs",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:13"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftItem",
            "type": "t_mapping(t_uint256,t_struct(NftItem)9868_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:15"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:17"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToOwnedIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:19"
          },
          {
            "contract": "CCNftStorage",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:21"
          },
          {
            "contract": "CCNftStorage",
            "label": "_tokensExtractionsByYear",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:23"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftCreator",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:26"
          },
          {
            "contract": "CCNftStorage",
            "label": "addressesFromTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:28"
          },
          {
            "contract": "CCNftStorage",
            "label": "_allNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:30"
          },
          {
            "contract": "NftOffersStorage",
            "label": "_offer",
            "type": "t_struct(Offer)12536_storage",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:13"
          },
          {
            "contract": "NftOffersStorage",
            "label": "tokenIdToOffer",
            "type": "t_mapping(t_uint256,t_struct(Offer)12536_storage)",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:16"
          },
          {
            "contract": "NftOffersStorage",
            "label": "offerBidsFromTokenId",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:18"
          },
          {
            "contract": "NftOffersStorage",
            "label": "indexOfofferBidsFromAddress",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:20"
          },
          {
            "contract": "NftOffersStorage",
            "label": "hasBidFromTokenId",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:23"
          },
          {
            "contract": "NftOffersStorage",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:24"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "NftOffers",
            "label": "collection",
            "type": "t_address",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:32"
          },
          {
            "contract": "NftOffers",
            "label": "nftVendor",
            "type": "t_contract(NftVendor)13767",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(NftVendor)13767": {
            "label": "contract NftVendor"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(Offer)12536_storage": {
            "label": "struct NftOffersStorage.Offer",
            "members": [
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "highestBid",
                "type": "t_uint256"
              },
              {
                "label": "highestBidder",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer)12536_storage)": {
            "label": "mapping(uint256 => struct NftOffersStorage.Offer)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(NftItem)9868_storage": {
            "label": "struct CCNftStorage.NftItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "creator",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(NftItem)9868_storage)": {
            "label": "mapping(uint256 => struct CCNftStorage.NftItem)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "fae4eb9fe2d60fa2ae2e48a982d21b13cd64531bd233bcef5e72c5039deab0b2": {
      "address": "0xBcD41D7B1d32210ECe81B1f76A9DF611330463bc",
      "txHash": "0x8b91d566e34a4ff068e43cacd7d29f3c855638c84ef3d09d4df0b3ef7b85e99b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "CCNftStorage",
            "label": "_nftItem",
            "type": "t_struct(NftItem)9884_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:10"
          },
          {
            "contract": "CCNftStorage",
            "label": "_usedTokenURIs",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:13"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftItem",
            "type": "t_mapping(t_uint256,t_struct(NftItem)9884_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:15"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:17"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToOwnedIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:19"
          },
          {
            "contract": "CCNftStorage",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:21"
          },
          {
            "contract": "CCNftStorage",
            "label": "_tokensExtractionsByYear",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:23"
          },
          {
            "contract": "CCNftStorage",
            "label": "_idToNftCreator",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:26"
          },
          {
            "contract": "CCNftStorage",
            "label": "addressesFromTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:28"
          },
          {
            "contract": "CCNftStorage",
            "label": "_allNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/CCNft/CCNftStorage.sol:30"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)3417_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3417_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CCNft",
            "label": "txFeeToken",
            "type": "t_address",
            "src": "../project:/contracts/CCNft/CCNft.sol:32"
          },
          {
            "contract": "CCNft",
            "label": "_tokenIds",
            "type": "t_struct(Counter)3938_storage",
            "src": "../project:/contracts/CCNft/CCNft.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)3938_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(RoyaltyInfo)3417_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)3417_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(NftItem)9884_storage": {
            "label": "struct CCNftStorage.NftItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "creator",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_uint256,t_struct(NftItem)9884_storage)": {
            "label": "mapping(uint256 => struct CCNftStorage.NftItem)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          }
        }
      }
    },
    "5bdb0cca76efc74c46bc6219343002756cbcfa42349e6adae8c1c115b349713d": {
      "address": "0x648b8206F8dA740f1bA21FfDfe3b0826C5F2d0FB",
      "txHash": "0xd037f61b7523989235c7b7f696e767206d04409788500c48bd214fa68b5ada7b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)3417_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3417_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CCNft",
            "label": "txFeeToken",
            "type": "t_address",
            "src": "../project:/contracts/CCNft/CCNft.sol:36"
          },
          {
            "contract": "CCNft",
            "label": "_storage",
            "type": "t_contract(ICCNftStorage)10714",
            "src": "../project:/contracts/CCNft/CCNft.sol:37"
          },
          {
            "contract": "CCNft",
            "label": "_tokenIds",
            "type": "t_struct(Counter)3938_storage",
            "src": "../project:/contracts/CCNft/CCNft.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(ICCNftStorage)10714": {
            "label": "contract ICCNftStorage"
          },
          "t_struct(Counter)3938_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(RoyaltyInfo)3417_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)3417_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "b458d09a0db753f93614b67f9ef958d0863c0c6a0f9a30eec04a089af18f1d73": {
      "address": "0xc1Ad323cE02AC68Bb807676BC2124B8cf53c3947",
      "txHash": "0xb78bf69398e3dce6caa90748a5380c8e3451313e37badf00360af708f9ce0601",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "NftOffersStorage",
            "label": "_offer",
            "type": "t_struct(Offer)12880_storage",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:13"
          },
          {
            "contract": "NftOffersStorage",
            "label": "tokenIdToOffer",
            "type": "t_mapping(t_uint256,t_struct(Offer)12880_storage)",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:16"
          },
          {
            "contract": "NftOffersStorage",
            "label": "offerBidsFromTokenId",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:18"
          },
          {
            "contract": "NftOffersStorage",
            "label": "indexOfofferBidsFromAddress",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:20"
          },
          {
            "contract": "NftOffersStorage",
            "label": "hasBidFromTokenId",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:23"
          },
          {
            "contract": "NftOffersStorage",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "NftOffers",
            "label": "collection",
            "type": "t_address",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:31"
          },
          {
            "contract": "NftOffers",
            "label": "nftVendor",
            "type": "t_contract(NftVendor)14111",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:32"
          },
          {
            "contract": "NftOffers",
            "label": "_ccNftStorage",
            "type": "t_contract(ICCNftStorage)10512",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(NftVendor)14111": {
            "label": "contract NftVendor"
          },
          "t_contract(ICCNftStorage)10512": {
            "label": "contract ICCNftStorage"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(Offer)12880_storage": {
            "label": "struct NftOffersStorage.Offer",
            "members": [
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "highestBid",
                "type": "t_uint256"
              },
              {
                "label": "highestBidder",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer)12880_storage)": {
            "label": "mapping(uint256 => struct NftOffersStorage.Offer)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "f80ac94da6eaacbb47f2d944bdebb82716b915ee882ddf0fc2a2dbff4dd183ec": {
      "address": "0xAD42d38684B9cf28aa1D9B2f1Da34684E238D735",
      "txHash": "0xd16a3527377bd9adaba1348a7730e39203b67db375cc99d1765fa4ba2002a15f",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "NftVendorStorage",
            "label": "collection",
            "type": "t_address",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:15"
          },
          {
            "contract": "NftVendorStorage",
            "label": "creator",
            "type": "t_address",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:16"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_allListedNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:17"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_allERC20Tokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:18"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_listedItems",
            "type": "t_struct(Counter)3938_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:20"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_listings",
            "type": "t_mapping(t_uint256,t_struct(Listing)14327_storage)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:22"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_proceeds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:23"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:25"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_excludedList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:27"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_acceptedTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:29"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_priceTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)3417_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3417_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(RoyaltyInfo)3417_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)3417_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_struct(Counter)3938_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Listing)14327_storage)": {
            "label": "mapping(uint256 => struct NftVendorStorage.Listing)"
          },
          "t_struct(Listing)14327_storage": {
            "label": "struct NftVendorStorage.Listing",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "afe03ec4568b9ea19b0c928eb8935215170458173196b76afeafce520f464ef5": {
      "address": "0x9f8fc02F607A97a17bC346c6F6791A51D2c01b93",
      "txHash": "0x1c17c19c5c14df9422e35ef46d20b4f0161150ee6da52cc5df6bd8f9ac74ad1d",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "NftOffersStorage",
            "label": "_offer",
            "type": "t_struct(Offer)13079_storage",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:13"
          },
          {
            "contract": "NftOffersStorage",
            "label": "tokenIdToOffer",
            "type": "t_mapping(t_uint256,t_struct(Offer)13079_storage)",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:16"
          },
          {
            "contract": "NftOffersStorage",
            "label": "offerBidsFromTokenId",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:18"
          },
          {
            "contract": "NftOffersStorage",
            "label": "indexOfofferBidsFromAddress",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:20"
          },
          {
            "contract": "NftOffersStorage",
            "label": "hasBidFromTokenId",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:23"
          },
          {
            "contract": "NftOffersStorage",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "NftOffers",
            "label": "collection",
            "type": "t_address",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:31"
          },
          {
            "contract": "NftOffers",
            "label": "nftVendor",
            "type": "t_contract(NftVendor)14313",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:32"
          },
          {
            "contract": "NftOffers",
            "label": "_ccNftStorage",
            "type": "t_contract(ICCNftStorage)10714",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(NftVendor)14313": {
            "label": "contract NftVendor"
          },
          "t_contract(ICCNftStorage)10714": {
            "label": "contract ICCNftStorage"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(Offer)13079_storage": {
            "label": "struct NftOffersStorage.Offer",
            "members": [
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "highestBid",
                "type": "t_uint256"
              },
              {
                "label": "highestBidder",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer)13079_storage)": {
            "label": "mapping(uint256 => struct NftOffersStorage.Offer)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "098e991dbbd6cdc3ce420d147869793c08389b608e7ef3aef4af7bb779b7a106": {
      "address": "0xC0fFCDb9335de89d902940a86E7E3A68E67d68F9",
      "txHash": "0xe05796b465d4b07ea6485c1fc4f2502f0708703d5ff71b26cee9feda5bb0ef07",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "NftOffersStorage",
            "label": "_offer",
            "type": "t_struct(Offer)13083_storage",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:13"
          },
          {
            "contract": "NftOffersStorage",
            "label": "tokenIdToOffer",
            "type": "t_mapping(t_uint256,t_struct(Offer)13083_storage)",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:16"
          },
          {
            "contract": "NftOffersStorage",
            "label": "offerBidsFromTokenId",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:18"
          },
          {
            "contract": "NftOffersStorage",
            "label": "indexOfofferBidsFromAddress",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:20"
          },
          {
            "contract": "NftOffersStorage",
            "label": "hasBidFromTokenId",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:23"
          },
          {
            "contract": "NftOffersStorage",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "NftOffers",
            "label": "collection",
            "type": "t_address",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:31"
          },
          {
            "contract": "NftOffers",
            "label": "nftVendor",
            "type": "t_contract(NftVendor)14317",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:32"
          },
          {
            "contract": "NftOffers",
            "label": "_ccNftStorage",
            "type": "t_contract(ICCNftStorage)10714",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(NftVendor)14317": {
            "label": "contract NftVendor"
          },
          "t_contract(ICCNftStorage)10714": {
            "label": "contract ICCNftStorage"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(Offer)13083_storage": {
            "label": "struct NftOffersStorage.Offer",
            "members": [
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "highestBid",
                "type": "t_uint256"
              },
              {
                "label": "highestBidder",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer)13083_storage)": {
            "label": "mapping(uint256 => struct NftOffersStorage.Offer)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "086d0080f5661c91c9e88f0647b72b2f1f9951294d9aaa7ec18831b70526b56b": {
      "address": "0x94912FD6Ae10fC582C25A9baB05e28ADd81359Ca",
      "txHash": "0xa9837041c04f9a266b1fd3d0c40d64a7c365bef9b25a2d8ae4cca79b7ed7a12d",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "NftVendorStorage",
            "label": "collection",
            "type": "t_address",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:15"
          },
          {
            "contract": "NftVendorStorage",
            "label": "creator",
            "type": "t_address",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:16"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_allListedNfts",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:17"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_allERC20Tokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:18"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_listedItems",
            "type": "t_struct(Counter)3938_storage",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:20"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_listings",
            "type": "t_mapping(t_uint256,t_struct(Listing)14767_storage)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:22"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_proceeds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:23"
          },
          {
            "contract": "NftVendorStorage",
            "label": "_idToNftIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:25"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_excludedList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:27"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_acceptedTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:29"
          },
          {
            "contract": "NftVendorStorage",
            "label": "s_priceTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/NftVendor/NftVendorStorage.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)3417_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3417_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(RoyaltyInfo)3417_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)3417_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_struct(Counter)3938_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Listing)14767_storage)": {
            "label": "mapping(uint256 => struct NftVendorStorage.Listing)"
          },
          "t_struct(Listing)14767_storage": {
            "label": "struct NftVendorStorage.Listing",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "de1a66ca926c528d8bd1c45fab07ce17c9c0981eb53d85fb0195286155a604f0": {
      "address": "0x84559AE4FF1f0146dC43087a5f77E51ff41Db320",
      "txHash": "0x6f819f1e2a36e926756d21f281fb817db08f7ab4692b8ba40925b4de4c706c50",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "NftOffersStorage",
            "label": "_offer",
            "type": "t_struct(Offer)13089_storage",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:13"
          },
          {
            "contract": "NftOffersStorage",
            "label": "tokenIdToOffer",
            "type": "t_mapping(t_uint256,t_struct(Offer)13089_storage)",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:16"
          },
          {
            "contract": "NftOffersStorage",
            "label": "offerBidsFromTokenId",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:18"
          },
          {
            "contract": "NftOffersStorage",
            "label": "indexOfofferBidsFromAddress",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:20"
          },
          {
            "contract": "NftOffersStorage",
            "label": "hasBidFromTokenId",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:23"
          },
          {
            "contract": "NftOffersStorage",
            "label": "pendingWithdrawals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/NftOffers/NftOffersStorage.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "NftOffers",
            "label": "collection",
            "type": "t_address",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:31"
          },
          {
            "contract": "NftOffers",
            "label": "nftVendor",
            "type": "t_contract(NftVendor)14336",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:32"
          },
          {
            "contract": "NftOffers",
            "label": "_ccNftStorage",
            "type": "t_contract(ICCNftStorage)10714",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(NftVendor)14336": {
            "label": "contract NftVendor"
          },
          "t_contract(ICCNftStorage)10714": {
            "label": "contract ICCNftStorage"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(Offer)13089_storage": {
            "label": "struct NftOffersStorage.Offer",
            "members": [
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "highestBid",
                "type": "t_uint256"
              },
              {
                "label": "highestBidder",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Offer)13089_storage)": {
            "label": "mapping(uint256 => struct NftOffersStorage.Offer)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "10c3dfeabc98bf65c485d0b0b628428cd85fa2689bc976e84377b156a93c7fcc": {
      "address": "0xD3182A023edFb277468E08FeC18bD7B00F0fcB77",
      "txHash": "0x1477d3c92919d8bbafc1a1ce55ab37eb9332315c9ee55ad7b13916efdc9b240c",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)3417_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3417_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CCNft",
            "label": "txFeeToken",
            "type": "t_address",
            "src": "../project:/contracts/CCNft/CCNft.sol:36"
          },
          {
            "contract": "CCNft",
            "label": "_storage",
            "type": "t_contract(ICCNftStorage)10693",
            "src": "../project:/contracts/CCNft/CCNft.sol:37"
          },
          {
            "contract": "CCNft",
            "label": "_tokenIds",
            "type": "t_struct(Counter)3938_storage",
            "src": "../project:/contracts/CCNft/CCNft.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(ICCNftStorage)10693": {
            "label": "contract ICCNftStorage"
          },
          "t_struct(Counter)3938_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(RoyaltyInfo)3417_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)3417_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "25687175fcd3083083c022b5aead60f6496392f98079d387884c1ef97a2f3e50": {
      "address": "0x30280dE06788415D21686eA23f2d078fC0dBF8eB",
      "txHash": "0x410cd6e055bfb30b022f5b1cca6b2c11a1f45c3e4efa29da4c543eb8bbf645ec",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "NftOffers",
            "label": "collection",
            "type": "t_address",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:30"
          },
          {
            "contract": "NftOffers",
            "label": "nftVendor",
            "type": "t_contract(NftVendor)14753",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:32"
          },
          {
            "contract": "NftOffers",
            "label": "_ccNftStorage",
            "type": "t_contract(ICCNftStorage)10714",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:33"
          },
          {
            "contract": "NftOffers",
            "label": "_nftOffersStorage",
            "type": "t_contract(INftOffersStorage)12225",
            "src": "../project:/contracts/NftOffers/NftOffers.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(NftVendor)14753": {
            "label": "contract NftVendor"
          },
          "t_contract(ICCNftStorage)10714": {
            "label": "contract ICCNftStorage"
          },
          "t_contract(INftOffersStorage)12225": {
            "label": "contract INftOffersStorage"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "93f0b12f9f134e373109ce3abe2c2331a01f6d7a5a8012957bb97e372603b836": {
      "address": "0x0ADA14418ef3deb42a2c52cb833A08fC364F3a2D",
      "txHash": "0x33dc3bb989d1e644dd1e751a3bfd8c555d04c7984dcf3e17c4bf763cac61cf1a",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)3417_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3417_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CCNft",
            "label": "txFeeToken",
            "type": "t_address",
            "src": "../project:/contracts/CCNft/CCNft.sol:36"
          },
          {
            "contract": "CCNft",
            "label": "_storage",
            "type": "t_contract(ICCNftStorage)10741",
            "src": "../project:/contracts/CCNft/CCNft.sol:37"
          },
          {
            "contract": "CCNft",
            "label": "_tokenIds",
            "type": "t_struct(Counter)3938_storage",
            "src": "../project:/contracts/CCNft/CCNft.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(ICCNftStorage)10741": {
            "label": "contract ICCNftStorage"
          },
          "t_struct(Counter)3938_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(RoyaltyInfo)3417_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)3417_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "8da4a904bfb18624f53c3c1a11a7214946dc5c38bb9758a554e8c5b1afb769b7": {
      "address": "0x702D6c44E1555C81E064821f9A5f00FA02BfaEd7",
      "txHash": "0x112c7652381f739b37b9024f57719654906ca3972d1c2304fe280e15ea8e0880",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_defaultRoyaltyInfo",
            "type": "t_struct(RoyaltyInfo)3417_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "_tokenRoyaltyInfo",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3417_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "contract": "ERC2981Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "CCNft",
            "label": "txFeeToken",
            "type": "t_address",
            "src": "../project:/contracts/CCNft/CCNft.sol:36"
          },
          {
            "contract": "CCNft",
            "label": "_storage",
            "type": "t_contract(ICCNftStorage)10772",
            "src": "../project:/contracts/CCNft/CCNft.sol:37"
          },
          {
            "contract": "CCNft",
            "label": "_tokenIds",
            "type": "t_struct(Counter)3938_storage",
            "src": "../project:/contracts/CCNft/CCNft.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(ICCNftStorage)10772": {
            "label": "contract ICCNftStorage"
          },
          "t_struct(Counter)3938_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(RoyaltyInfo)3417_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96"
              }
            ]
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)3417_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    }
  }
}
