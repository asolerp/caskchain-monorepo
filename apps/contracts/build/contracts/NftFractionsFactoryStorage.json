{
  "contractName": "NftFractionsFactoryStorage",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowedAddresses",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nftToVault",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenAddressCreated",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "vaults",
      "outputs": [
        {
          "internalType": "address",
          "name": "vaultAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addAllowedAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "removeAllowedAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isAllowedAddress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getVaultCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getVault",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "vaultAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "internalType": "struct NftFractionsFactoryStorage.Vault",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getAllCreatedVaults",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        }
      ],
      "name": "vaultExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nftId",
          "type": "uint256"
        }
      ],
      "name": "setVaultExists",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "setVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "pushTokenAddressCreated",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addAllowedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedAddresses\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllCreatedVaults\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getVault\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"vaultAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct NftFractionsFactoryStorage.Vault\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVaultCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isAllowedAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nftToVault\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"pushTokenAddressCreated\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeAllowedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"setVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"}],\"name\":\"setVaultExists\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenAddressCreated\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"}],\"name\":\"vaultExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vaults\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"vaultAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"vaultCount()\":{\"notice\":\"the number of ERC721 vaults\"},\"vaults(uint256)\":{\"notice\":\"the mapping of vault number to vault contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/NftFractions/NftFractionsFactoryStorage.sol\":\"NftFractionsFactoryStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/NftFractions/NftFractionsFactoryStorage.sol\":{\"keccak256\":\"0x3078ceceb103bb946739150ab556bcf5696c7209524beab512d200a6b8bf0683\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98bb2000bb9e353421db7953a67ad38ea76f5beb19fac1c1821887199fb96849\",\"dweb:/ipfs/QmQUrVm2SYWvctpR6JrG9soFjvHZXLg8efLNcRxRnzXCnC\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6108878061007e6000396000f3fe608060405234801561001057600080fd5b50600436106101155760003560e01c80638c7eaf17116100a2578063a7c6a10011610071578063a7c6a10014610322578063b6bc53e31461032b578063b8e6e1a414610340578063ee35db5f14610353578063f2fde38b1461038157600080fd5b80638c7eaf17146102385780638da5cb5b1461024b578063932376fe146102705780639403b634146102a957600080fd5b8063715018a6116100e9578063715018a61461018d57806374d4e4911461019557806381788e2b146101a75780638345245e146101ba5780638c64ea4a146101e657600080fd5b8062f310c31461011a57806336f61bd91461012f5780633c9d93b8146101425780634120657a14610155575b600080fd5b61012d610128366004610749565b610394565b005b61012d61013d36600461076b565b61041e565b61012d610150366004610749565b6104b3565b610178610163366004610749565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61012d6104dc565b6002545b604051908152602001610184565b61012d6101b5366004610749565b6104f0565b6101786101c8366004610749565b6001600160a01b031660009081526001602052604090205460ff1690565b6102196101f4366004610795565b600460205260009081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b039093168352602083019190915201610184565b61012d61024636600461076b565b61051f565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610184565b61017861027e36600461076b565b6001600160a01b03919091166000908152600560209081526040808320938352929052205460ff1690565b6102fe6102b7366004610795565b604080518082019091526000808252602082015250600090815260046020908152604091829020825180840190935280546001600160a01b03168352600101549082015290565b6040805182516001600160a01b031681526020928301519281019290925201610184565b61019960025481565b61033361057e565b60405161018491906107ae565b61025861034e366004610795565b6105e0565b61017861036136600461076b565b600560209081526000928352604080842090915290825290205460ff1681565b61012d61038f366004610749565b61060a565b3360009081526001602052604090205460ff166103cc5760405162461bcd60e51b81526004016103c3906107fb565b60405180910390fd5b600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b0392909216919091179055565b3360009081526001602052604090205460ff1661044d5760405162461bcd60e51b81526004016103c3906107fb565b6040805180820182526001600160a01b03848116825260208083018581526002805460009081526004909352948220935184546001600160a01b03191693169290921783559051600190920191909155815491906104aa8361082a565b91905055505050565b6104bb610683565b6001600160a01b03166000908152600160205260409020805460ff19169055565b6104e4610683565b6104ee60006106dd565b565b6104f8610683565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b3360009081526001602052604090205460ff1661054e5760405162461bcd60e51b81526004016103c3906107fb565b6001600160a01b03909116600090815260056020908152604080832093835292905220805460ff19166001179055565b606060038054806020026020016040519081016040528092919081815260200182805480156105d657602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105b8575b5050505050905090565b600381815481106105f057600080fd5b6000918252602090912001546001600160a01b0316905081565b610612610683565b6001600160a01b0381166106775760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103c3565b610680816106dd565b50565b6000546001600160a01b031633146104ee5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103c3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461074457600080fd5b919050565b60006020828403121561075b57600080fd5b6107648261072d565b9392505050565b6000806040838503121561077e57600080fd5b6107878361072d565b946020939093013593505050565b6000602082840312156107a757600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156107ef5783516001600160a01b0316835292840192918401916001016107ca565b50909695505050505050565b60208082526015908201527410d85b1b195c881a5cc81b9bdd08185b1b1bddd959605a1b604082015260600190565b60006001820161084a57634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122085447691605f16afd206066bb873de422cd87c454b5d4d1608c0a2e6d1c1ac3a64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101155760003560e01c80638c7eaf17116100a2578063a7c6a10011610071578063a7c6a10014610322578063b6bc53e31461032b578063b8e6e1a414610340578063ee35db5f14610353578063f2fde38b1461038157600080fd5b80638c7eaf17146102385780638da5cb5b1461024b578063932376fe146102705780639403b634146102a957600080fd5b8063715018a6116100e9578063715018a61461018d57806374d4e4911461019557806381788e2b146101a75780638345245e146101ba5780638c64ea4a146101e657600080fd5b8062f310c31461011a57806336f61bd91461012f5780633c9d93b8146101425780634120657a14610155575b600080fd5b61012d610128366004610749565b610394565b005b61012d61013d36600461076b565b61041e565b61012d610150366004610749565b6104b3565b610178610163366004610749565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61012d6104dc565b6002545b604051908152602001610184565b61012d6101b5366004610749565b6104f0565b6101786101c8366004610749565b6001600160a01b031660009081526001602052604090205460ff1690565b6102196101f4366004610795565b600460205260009081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b039093168352602083019190915201610184565b61012d61024636600461076b565b61051f565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610184565b61017861027e36600461076b565b6001600160a01b03919091166000908152600560209081526040808320938352929052205460ff1690565b6102fe6102b7366004610795565b604080518082019091526000808252602082015250600090815260046020908152604091829020825180840190935280546001600160a01b03168352600101549082015290565b6040805182516001600160a01b031681526020928301519281019290925201610184565b61019960025481565b61033361057e565b60405161018491906107ae565b61025861034e366004610795565b6105e0565b61017861036136600461076b565b600560209081526000928352604080842090915290825290205460ff1681565b61012d61038f366004610749565b61060a565b3360009081526001602052604090205460ff166103cc5760405162461bcd60e51b81526004016103c3906107fb565b60405180910390fd5b600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b0392909216919091179055565b3360009081526001602052604090205460ff1661044d5760405162461bcd60e51b81526004016103c3906107fb565b6040805180820182526001600160a01b03848116825260208083018581526002805460009081526004909352948220935184546001600160a01b03191693169290921783559051600190920191909155815491906104aa8361082a565b91905055505050565b6104bb610683565b6001600160a01b03166000908152600160205260409020805460ff19169055565b6104e4610683565b6104ee60006106dd565b565b6104f8610683565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b3360009081526001602052604090205460ff1661054e5760405162461bcd60e51b81526004016103c3906107fb565b6001600160a01b03909116600090815260056020908152604080832093835292905220805460ff19166001179055565b606060038054806020026020016040519081016040528092919081815260200182805480156105d657602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105b8575b5050505050905090565b600381815481106105f057600080fd5b6000918252602090912001546001600160a01b0316905081565b610612610683565b6001600160a01b0381166106775760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103c3565b610680816106dd565b50565b6000546001600160a01b031633146104ee5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103c3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461074457600080fd5b919050565b60006020828403121561075b57600080fd5b6107648261072d565b9392505050565b6000806040838503121561077e57600080fd5b6107878361072d565b946020939093013593505050565b6000602082840312156107a757600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156107ef5783516001600160a01b0316835292840192918401916001016107ca565b50909695505050505050565b60208082526015908201527410d85b1b195c881a5cc81b9bdd08185b1b1bddd959605a1b604082015260600190565b60006001820161084a57634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122085447691605f16afd206066bb873de422cd87c454b5d4d1608c0a2e6d1c1ac3a64736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4029:69",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:69",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:69"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:69"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:69"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:69",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:69",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:69",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:69"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:69"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:69"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:69"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:69"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:69",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:69",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:69"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:69"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:69",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:69"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:69"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:69"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:69"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:69"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:69"
                  },
                  "nodeType": "YulIf",
                  "src": "111:70:69"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:69",
                "type": ""
              }
            ],
            "src": "14:173:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "262:116:69",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "308:16:69",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "317:1:69",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "320:1:69",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:69"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:12:69"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:12:69"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "283:7:69"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "292:9:69"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "279:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "279:23:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:2:69",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "275:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:32:69"
                  },
                  "nodeType": "YulIf",
                  "src": "272:52:69"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "333:39:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "362:9:69"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "343:18:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "343:29:69"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "333:6:69"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "228:9:69",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "239:7:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "251:6:69",
                "type": ""
              }
            ],
            "src": "192:186:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "470:167:69",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "516:16:69",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "525:1:69",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "528:1:69",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "518:6:69"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "518:12:69"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "518:12:69"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "491:7:69"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "500:9:69"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "487:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "487:23:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "512:2:69",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "483:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "483:32:69"
                  },
                  "nodeType": "YulIf",
                  "src": "480:52:69"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "541:39:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "570:9:69"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "551:18:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "551:29:69"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "541:6:69"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "589:42:69",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "616:9:69"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "627:2:69",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "612:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "612:18:69"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "599:12:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "599:32:69"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "589:6:69"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "428:9:69",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "439:7:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "451:6:69",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "459:6:69",
                "type": ""
              }
            ],
            "src": "383:254:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "737:92:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "747:26:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "759:9:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "770:2:69",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "755:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "755:18:69"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "747:4:69"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "789:9:69"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "814:6:69"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "807:6:69"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "807:14:69"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "800:6:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "800:22:69"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "782:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "782:41:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "782:41:69"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "706:9:69",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "717:6:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "728:4:69",
                "type": ""
              }
            ],
            "src": "642:187:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "935:76:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "945:26:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "957:9:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "968:2:69",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "953:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "953:18:69"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "945:4:69"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "987:9:69"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "998:6:69"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "980:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:25:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "980:25:69"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "904:9:69",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "915:6:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "926:4:69",
                "type": ""
              }
            ],
            "src": "834:177:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1086:110:69",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1132:16:69",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1141:1:69",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1144:1:69",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1134:6:69"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1134:12:69"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1134:12:69"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1107:7:69"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1116:9:69"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1103:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1103:23:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1128:2:69",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1099:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1099:32:69"
                  },
                  "nodeType": "YulIf",
                  "src": "1096:52:69"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1157:33:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1180:9:69"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1167:12:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1167:23:69"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1157:6:69"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1052:9:69",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1063:7:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1075:6:69",
                "type": ""
              }
            ],
            "src": "1016:180:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1330:145:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1340:26:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1352:9:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1363:2:69",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1348:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1348:18:69"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1340:4:69"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1382:9:69"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1397:6:69"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1413:3:69",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1418:1:69",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1409:3:69"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1409:11:69"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1422:1:69",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1405:3:69"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1405:19:69"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1393:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1393:32:69"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1375:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1375:51:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1375:51:69"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1446:9:69"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1457:2:69",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1442:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1442:18:69"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1462:6:69"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1435:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1435:34:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1435:34:69"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1291:9:69",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1302:6:69",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1310:6:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1321:4:69",
                "type": ""
              }
            ],
            "src": "1201:274:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1581:102:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1591:26:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1603:9:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1614:2:69",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1599:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1599:18:69"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1591:4:69"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1633:9:69"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1648:6:69"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1664:3:69",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1669:1:69",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1660:3:69"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1660:11:69"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1673:1:69",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1656:3:69"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1656:19:69"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1644:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1644:32:69"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1626:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1626:51:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1626:51:69"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1550:9:69",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1561:6:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1572:4:69",
                "type": ""
              }
            ],
            "src": "1480:203:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1837:172:69",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1847:26:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1859:9:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1870:2:69",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1855:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1855:18:69"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1847:4:69"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1889:9:69"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1910:6:69"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "1904:5:69"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1904:13:69"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1927:3:69",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1932:1:69",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1923:3:69"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1923:11:69"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1936:1:69",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1919:3:69"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1919:19:69"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1900:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1900:39:69"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1882:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1882:58:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1882:58:69"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1960:9:69"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1971:4:69",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1956:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1956:20:69"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1988:6:69"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1996:4:69",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1984:3:69"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1984:17:69"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1978:5:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1978:24:69"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1949:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1949:54:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1949:54:69"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Vault_$11855_memory_ptr__to_t_struct$_Vault_$11855_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1806:9:69",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1817:6:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1828:4:69",
                "type": ""
              }
            ],
            "src": "1688:321:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2165:507:69",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2175:12:69",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2185:2:69",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2179:2:69",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2196:32:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2214:9:69"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2225:2:69"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2210:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2210:18:69"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "2200:6:69",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2244:9:69"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2255:2:69"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2237:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2237:21:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2237:21:69"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2267:17:69",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "2278:6:69"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "2271:3:69",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2293:27:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2313:6:69"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2307:5:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2307:13:69"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2297:6:69",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "2336:6:69"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2344:6:69"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2329:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2329:22:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2329:22:69"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2360:25:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2371:9:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2382:2:69",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2367:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2367:18:69"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2360:3:69"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2394:29:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2412:6:69"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2420:2:69"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2408:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2408:15:69"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "2398:6:69",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2432:10:69",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2441:1:69",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2436:1:69",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2500:146:69",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2521:3:69"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "2536:6:69"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "2530:5:69"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2530:13:69"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2553:3:69",
                                          "type": "",
                                          "value": "160"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2558:1:69",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "2549:3:69"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2549:11:69"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2562:1:69",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "2545:3:69"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2545:19:69"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "2526:3:69"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2526:39:69"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2514:6:69"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2514:52:69"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2514:52:69"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2579:19:69",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2590:3:69"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "2595:2:69"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2586:3:69"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2586:12:69"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2579:3:69"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2611:25:69",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "2625:6:69"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "2633:2:69"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2621:3:69"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2621:15:69"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2611:6:69"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2462:1:69"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2465:6:69"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2459:2:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2459:13:69"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2473:18:69",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2475:14:69",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2484:1:69"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2487:1:69",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2480:3:69"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2480:9:69"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2475:1:69"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2455:3:69",
                    "statements": []
                  },
                  "src": "2451:195:69"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2655:11:69",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "2663:3:69"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2655:4:69"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2134:9:69",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2145:6:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2156:4:69",
                "type": ""
              }
            ],
            "src": "2014:658:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2851:171:69",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2868:9:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2879:2:69",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2861:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2861:21:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2861:21:69"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2902:9:69"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2913:2:69",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2898:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2898:18:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2918:2:69",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2891:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2891:30:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2891:30:69"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2941:9:69"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2952:2:69",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2937:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2937:18:69"
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f7420616c6c6f776564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2957:23:69",
                        "type": "",
                        "value": "Caller is not allowed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2930:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2930:51:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2930:51:69"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2990:26:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3002:9:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3013:2:69",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2998:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2998:18:69"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2990:4:69"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_07c591472b710e3325fc8263e5e7101da989326f83b5d540cdb0310c59ba3576__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2828:9:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2842:4:69",
                "type": ""
              }
            ],
            "src": "2677:345:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3074:185:69",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3113:111:69",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3134:1:69",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3141:3:69",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3146:10:69",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3137:3:69"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3137:20:69"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3127:6:69"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3127:31:69"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3127:31:69"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3178:1:69",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3181:4:69",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3171:6:69"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3171:15:69"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3171:15:69"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3206:1:69",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3209:4:69",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3199:6:69"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3199:15:69"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3199:15:69"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3090:5:69"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3101:1:69",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "3097:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3097:6:69"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "3087:2:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3087:17:69"
                  },
                  "nodeType": "YulIf",
                  "src": "3084:140:69"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3233:20:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3244:5:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3251:1:69",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3240:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3240:13:69"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "3233:3:69"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3056:5:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "3066:3:69",
                "type": ""
              }
            ],
            "src": "3027:232:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3438:228:69",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3455:9:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3466:2:69",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3448:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3448:21:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3448:21:69"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3489:9:69"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3500:2:69",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3485:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3485:18:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3505:2:69",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3478:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3478:30:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3478:30:69"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3528:9:69"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3539:2:69",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3524:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3524:18:69"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3544:34:69",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3517:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3517:62:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3517:62:69"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3599:9:69"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3610:2:69",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3595:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3595:18:69"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3615:8:69",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3588:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3588:36:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3588:36:69"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3633:27:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3645:9:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3656:3:69",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3641:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3641:19:69"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3633:4:69"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3415:9:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3429:4:69",
                "type": ""
              }
            ],
            "src": "3264:402:69"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3845:182:69",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3862:9:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3873:2:69",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3855:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3855:21:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3855:21:69"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3896:9:69"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3907:2:69",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3892:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3892:18:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3912:2:69",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3885:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3885:30:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3885:30:69"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3935:9:69"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3946:2:69",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3931:3:69"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3931:18:69"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3951:34:69",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3924:6:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3924:62:69"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3924:62:69"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3995:26:69",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4007:9:69"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4018:2:69",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4003:3:69"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4003:18:69"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3995:4:69"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3822:9:69",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3836:4:69",
                "type": ""
              }
            ],
            "src": "3671:356:69"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_struct$_Vault_$11855_memory_ptr__to_t_struct$_Vault_$11855_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(mload(value0), sub(shl(160, 1), 1)))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_stringliteral_07c591472b710e3325fc8263e5e7101da989326f83b5d540cdb0310c59ba3576__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Caller is not allowed\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 69,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "109:1964:60:-:0;;;;;;;;;;;;-1:-1:-1;936:32:31;719:10:41;936:18:31;:32::i;:::-;109:1964:60;;2433:187:31;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:31;;;-1:-1:-1;;;;;;2541:17:31;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;109:1964:60:-;;;;;;;",
  "deployedSourceMap": "109:1964:60:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1960:111;;;;;;:::i;:::-;;:::i;:::-;;1812:144;;;;;;:::i;:::-;;:::i;891:110::-;;;;;;:::i;:::-;;:::i;253:48::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;807:14:69;;800:22;782:41;;770:2;755:18;253:48:60;;;;;;;;1831:101:31;;;:::i;1188:83:60:-;1256:10;;1188:83;;;980:25:69;;;968:2;953:18;1188:83:60;834:177:69;781:106:60;;;;;;:::i;:::-;;:::i;1005:115::-;;;;;;:::i;:::-;-1:-1:-1;;;;;1089:26:60;1070:4;1089:26;;;:16;:26;;;;;;;;;1005:115;478:39;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;478:39:60;;;;;;;;;;-1:-1:-1;;;;;1393:32:69;;;1375:51;;1457:2;1442:18;;1435:34;;;;1348:18;478:39:60;1201:274:69;1691:117:60;;;;;;:::i;:::-;;:::i;1201:85:31:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:31;1201:85;;;-1:-1:-1;;;;;1644:32:69;;;1626:51;;1614:2;1599:18;1201:85:31;1480:203:69;1489:134:60;;;;;;:::i;:::-;-1:-1:-1;;;;;1593:18:60;;;;1574:4;1593:18;;;:10;:18;;;;;;;;:25;;;;;;;;;;;1489:134;1275:99;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;1356:13:60;;;;:6;:13;;;;;;;;;1349:20;;;;;;;;;;-1:-1:-1;;;;;1349:20:60;;;;;;;;;;;1275:99;;;;;1904:13:69;;-1:-1:-1;;;;;1900:39:69;1882:58;;1996:4;1984:17;;;1978:24;1956:20;;;1949:54;;;;1855:18;1275:99:60;1688:321:69;348:25:60;;;;;;1378:107;;;:::i;:::-;;;;;;;:::i;377:36::-;;;;;;:::i;:::-;;:::i;521:62::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;2081:198:31;;;;;;:::i;:::-;;:::i;1960:111:60:-;728:10;711:28;;;;:16;:28;;;;;;;;703:62;;;;-1:-1:-1;;;703:62:60;;;;;;;:::i;:::-;;;;;;;;;2034:19:::1;:32:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;2034:32:60;;;;;::::1;::::0;;-1:-1:-1;;;;;;2034:32:60::1;-1:-1:-1::0;;;;;2034:32:60;;;::::1;::::0;;;::::1;::::0;;1960:111::o;1812:144::-;728:10;711:28;;;;:16;:28;;;;;;;;703:62;;;;-1:-1:-1;;;703:62:60;;;;;;;:::i;:::-;1910:23:::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;1910:23:60;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;1896:10:::1;::::0;;-1:-1:-1;1889:18:60;;;:6:::1;:18:::0;;;;;;:44;;;;-1:-1:-1;;;;;;1889:44:60::1;::::0;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;1889:44:60;;::::1;::::0;;;;1939:12;;;1896:10;1939:12:::1;::::0;::::1;:::i;:::-;;;;;;1812:144:::0;;:::o;891:110::-;1094:13:31;:11;:13::i;:::-;-1:-1:-1;;;;;962:26:60::1;991:5;962:26:::0;;;:16:::1;:26;::::0;;;;:34;;-1:-1:-1;;962:34:60::1;::::0;;891:110::o;1831:101:31:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;781:106:60:-;1094:13:31;:11;:13::i;:::-;-1:-1:-1;;;;;849:26:60::1;;::::0;;;878:4:::1;849:26;::::0;;;;;;;:33;;-1:-1:-1;;849:33:60::1;::::0;;::::1;::::0;;781:106::o;1691:117::-;728:10;711:28;;;;:16;:28;;;;;;;;703:62;;;;-1:-1:-1;;;703:62:60;;;;;;;:::i;:::-;-1:-1:-1;;;;;1771:18:60;;::::1;;::::0;;;:10:::1;:18;::::0;;;;;;;:25;;;;;;;:32;;-1:-1:-1;;1771:32:60::1;1799:4;1771:32;::::0;;1691:117::o;1378:107::-;1430:16;1461:19;1454:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1454:26:60;;;;;;;;;;;;;;;;;;;;;;;1378:107;:::o;377:36::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;377:36:60;;-1:-1:-1;377:36:60;:::o;2081:198:31:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:31;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:31;;3466:2:69;2161:73:31::1;::::0;::::1;3448:21:69::0;3505:2;3485:18;;;3478:30;3544:34;3524:18;;;3517:62;-1:-1:-1;;;3595:18:69;;;3588:36;3641:19;;2161:73:31::1;3264:402:69::0;2161:73:31::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:31;719:10:41;1422:23:31;1414:68;;;;-1:-1:-1;;;1414:68:31;;3873:2:69;1414:68:31;;;3855:21:69;;;3892:18;;;3885:30;3951:34;3931:18;;;3924:62;4003:18;;1414:68:31;3671:356:69;2433:187:31;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:31;;;-1:-1:-1;;;;;;2541:17:31;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:173:69:-;82:20;;-1:-1:-1;;;;;131:31:69;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:69:o;383:254::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;627:2;612:18;;;;599:32;;-1:-1:-1;;;383:254:69:o;1016:180::-;1075:6;1128:2;1116:9;1107:7;1103:23;1099:32;1096:52;;;1144:1;1141;1134:12;1096:52;-1:-1:-1;1167:23:69;;1016:180;-1:-1:-1;1016:180:69:o;2014:658::-;2185:2;2237:21;;;2307:13;;2210:18;;;2329:22;;;2156:4;;2185:2;2408:15;;;;2382:2;2367:18;;;2156:4;2451:195;2465:6;2462:1;2459:13;2451:195;;;2530:13;;-1:-1:-1;;;;;2526:39:69;2514:52;;2621:15;;;;2586:12;;;;2562:1;2480:9;2451:195;;;-1:-1:-1;2663:3:69;;2014:658;-1:-1:-1;;;;;;2014:658:69:o;2677:345::-;2879:2;2861:21;;;2918:2;2898:18;;;2891:30;-1:-1:-1;;;2952:2:69;2937:18;;2930:51;3013:2;2998:18;;2677:345::o;3027:232::-;3066:3;3087:17;;;3084:140;;3146:10;3141:3;3137:20;3134:1;3127:31;3181:4;3178:1;3171:15;3209:4;3206:1;3199:15;3084:140;-1:-1:-1;3251:1:69;3240:13;;3027:232::o",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract NftFractionsFactoryStorage is Ownable {\n  struct Vault {\n    address vaultAddress;\n    uint256 tokenId;\n  }\n\n  // Address => Boolean\n  mapping(address => bool) public allowedAddresses;\n\n  /// @notice the number of ERC721 vaults\n  uint256 public vaultCount;\n  address[] public tokenAddressCreated;\n\n  /// @notice the mapping of vault number to vault contract\n  mapping(uint256 => Vault) public vaults;\n  mapping(address => mapping(uint256 => bool)) public nftToVault;\n\n  /////////////////////\n  // ALLOWED ADDRESSES MANAGEMENT //\n  /////////////////////\n\n  modifier onlyAllowed() {\n    require(allowedAddresses[msg.sender], \"Caller is not allowed\");\n    _;\n  }\n\n  function addAllowedAddress(address _address) public onlyOwner {\n    allowedAddresses[_address] = true;\n  }\n\n  function removeAllowedAddress(address _address) public onlyOwner {\n    allowedAddresses[_address] = false;\n  }\n\n  function isAllowedAddress(address _address) public view returns (bool) {\n    return allowedAddresses[_address];\n  }\n\n  /////////////////////\n  // GETTER //\n  /////////////////////\n\n  function getVaultCount() public view returns (uint256) {\n    return vaultCount;\n  }\n\n  function getVault(uint256 index) public view returns (Vault memory) {\n    return vaults[index];\n  }\n\n  function getAllCreatedVaults() public view returns (address[] memory) {\n    return tokenAddressCreated;\n  }\n\n  function vaultExists(\n    address _token,\n    uint256 nftId\n  ) public view returns (bool) {\n    return nftToVault[_token][nftId];\n  }\n\n  /////////////////////\n  // SETTER //\n  /////////////////////\n\n  function setVaultExists(address _token, uint256 nftId) public onlyAllowed {\n    nftToVault[_token][nftId] = true;\n  }\n\n  function setVault(address _vault, uint256 _tokenId) public onlyAllowed {\n    vaults[vaultCount] = Vault(_vault, _tokenId);\n    vaultCount++;\n  }\n\n  function pushTokenAddressCreated(address _vault) public onlyAllowed {\n    tokenAddressCreated.push(_vault);\n  }\n}\n",
  "sourcePath": "/Users/alberto/Desktop/Enalbis/caskchain-mono/apps/contracts/contracts/NftFractions/NftFractionsFactoryStorage.sol",
  "ast": {
    "absolutePath": "project:/contracts/NftFractions/NftFractionsFactoryStorage.sol",
    "exportedSymbols": {
      "Context": [
        7744
      ],
      "NftFractionsFactoryStorage": [
        12030
      ],
      "Ownable": [
        5587
      ]
    },
    "id": 12031,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11847,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:60"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 11848,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12031,
        "sourceUnit": 5588,
        "src": "55:52:60",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11849,
              "name": "Ownable",
              "nameLocations": [
                "148:7:60"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5587,
              "src": "148:7:60"
            },
            "id": 11850,
            "nodeType": "InheritanceSpecifier",
            "src": "148:7:60"
          }
        ],
        "canonicalName": "NftFractionsFactoryStorage",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 12030,
        "linearizedBaseContracts": [
          12030,
          5587,
          7744
        ],
        "name": "NftFractionsFactoryStorage",
        "nameLocation": "118:26:60",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "NftFractionsFactoryStorage.Vault",
            "id": 11855,
            "members": [
              {
                "constant": false,
                "id": 11852,
                "mutability": "mutable",
                "name": "vaultAddress",
                "nameLocation": "187:12:60",
                "nodeType": "VariableDeclaration",
                "scope": 11855,
                "src": "179:20:60",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 11851,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "179:7:60",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11854,
                "mutability": "mutable",
                "name": "tokenId",
                "nameLocation": "213:7:60",
                "nodeType": "VariableDeclaration",
                "scope": 11855,
                "src": "205:15:60",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 11853,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "205:7:60",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Vault",
            "nameLocation": "167:5:60",
            "nodeType": "StructDefinition",
            "scope": 12030,
            "src": "160:65:60",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4120657a",
            "id": 11859,
            "mutability": "mutable",
            "name": "allowedAddresses",
            "nameLocation": "285:16:60",
            "nodeType": "VariableDeclaration",
            "scope": 12030,
            "src": "253:48:60",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 11858,
              "keyType": {
                "id": 11856,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "261:7:60",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "253:24:60",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 11857,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "272:4:60",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11860,
              "nodeType": "StructuredDocumentation",
              "src": "306:39:60",
              "text": "@notice the number of ERC721 vaults"
            },
            "functionSelector": "a7c6a100",
            "id": 11862,
            "mutability": "mutable",
            "name": "vaultCount",
            "nameLocation": "363:10:60",
            "nodeType": "VariableDeclaration",
            "scope": 12030,
            "src": "348:25:60",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11861,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "348:7:60",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b8e6e1a4",
            "id": 11865,
            "mutability": "mutable",
            "name": "tokenAddressCreated",
            "nameLocation": "394:19:60",
            "nodeType": "VariableDeclaration",
            "scope": 12030,
            "src": "377:36:60",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 11863,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "377:7:60",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 11864,
              "nodeType": "ArrayTypeName",
              "src": "377:9:60",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11866,
              "nodeType": "StructuredDocumentation",
              "src": "418:57:60",
              "text": "@notice the mapping of vault number to vault contract"
            },
            "functionSelector": "8c64ea4a",
            "id": 11871,
            "mutability": "mutable",
            "name": "vaults",
            "nameLocation": "511:6:60",
            "nodeType": "VariableDeclaration",
            "scope": 12030,
            "src": "478:39:60",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$11855_storage_$",
              "typeString": "mapping(uint256 => struct NftFractionsFactoryStorage.Vault)"
            },
            "typeName": {
              "id": 11870,
              "keyType": {
                "id": 11867,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "486:7:60",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "478:25:60",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$11855_storage_$",
                "typeString": "mapping(uint256 => struct NftFractionsFactoryStorage.Vault)"
              },
              "valueType": {
                "id": 11869,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 11868,
                  "name": "Vault",
                  "nameLocations": [
                    "497:5:60"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11855,
                  "src": "497:5:60"
                },
                "referencedDeclaration": 11855,
                "src": "497:5:60",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Vault_$11855_storage_ptr",
                  "typeString": "struct NftFractionsFactoryStorage.Vault"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ee35db5f",
            "id": 11877,
            "mutability": "mutable",
            "name": "nftToVault",
            "nameLocation": "573:10:60",
            "nodeType": "VariableDeclaration",
            "scope": 12030,
            "src": "521:62:60",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(uint256 => bool))"
            },
            "typeName": {
              "id": 11876,
              "keyType": {
                "id": 11872,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "529:7:60",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "521:44:60",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(uint256 => bool))"
              },
              "valueType": {
                "id": 11875,
                "keyType": {
                  "id": 11873,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "548:7:60",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "540:24:60",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                  "typeString": "mapping(uint256 => bool)"
                },
                "valueType": {
                  "id": 11874,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "559:4:60",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 11888,
              "nodeType": "Block",
              "src": "697:80:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 11880,
                          "name": "allowedAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11859,
                          "src": "711:16:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 11883,
                        "indexExpression": {
                          "expression": {
                            "id": 11881,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "728:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 11882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "732:6:60",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "728:10:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "711:28:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f7420616c6c6f776564",
                        "id": 11884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "741:23:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_07c591472b710e3325fc8263e5e7101da989326f83b5d540cdb0310c59ba3576",
                          "typeString": "literal_string \"Caller is not allowed\""
                        },
                        "value": "Caller is not allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_07c591472b710e3325fc8263e5e7101da989326f83b5d540cdb0310c59ba3576",
                          "typeString": "literal_string \"Caller is not allowed\""
                        }
                      ],
                      "id": 11879,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "703:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "703:62:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11886,
                  "nodeType": "ExpressionStatement",
                  "src": "703:62:60"
                },
                {
                  "id": 11887,
                  "nodeType": "PlaceholderStatement",
                  "src": "771:1:60"
                }
              ]
            },
            "id": 11889,
            "name": "onlyAllowed",
            "nameLocation": "683:11:60",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 11878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "694:2:60"
            },
            "src": "674:103:60",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11902,
              "nodeType": "Block",
              "src": "843:44:60",
              "statements": [
                {
                  "expression": {
                    "id": 11900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 11896,
                        "name": "allowedAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11859,
                        "src": "849:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 11898,
                      "indexExpression": {
                        "id": 11897,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11891,
                        "src": "866:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "849:26:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 11899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "878:4:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "849:33:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11901,
                  "nodeType": "ExpressionStatement",
                  "src": "849:33:60"
                }
              ]
            },
            "functionSelector": "81788e2b",
            "id": 11903,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11894,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11893,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "833:9:60"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5506,
                  "src": "833:9:60"
                },
                "nodeType": "ModifierInvocation",
                "src": "833:9:60"
              }
            ],
            "name": "addAllowedAddress",
            "nameLocation": "790:17:60",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11891,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "816:8:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 11903,
                  "src": "808:16:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11890,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "808:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "807:18:60"
            },
            "returnParameters": {
              "id": 11895,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "843:0:60"
            },
            "scope": 12030,
            "src": "781:106:60",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11916,
              "nodeType": "Block",
              "src": "956:45:60",
              "statements": [
                {
                  "expression": {
                    "id": 11914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 11910,
                        "name": "allowedAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11859,
                        "src": "962:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 11912,
                      "indexExpression": {
                        "id": 11911,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11905,
                        "src": "979:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "962:26:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 11913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "991:5:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "962:34:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11915,
                  "nodeType": "ExpressionStatement",
                  "src": "962:34:60"
                }
              ]
            },
            "functionSelector": "3c9d93b8",
            "id": 11917,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11908,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11907,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "946:9:60"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5506,
                  "src": "946:9:60"
                },
                "nodeType": "ModifierInvocation",
                "src": "946:9:60"
              }
            ],
            "name": "removeAllowedAddress",
            "nameLocation": "900:20:60",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11905,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "929:8:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 11917,
                  "src": "921:16:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11904,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "921:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "920:18:60"
            },
            "returnParameters": {
              "id": 11909,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "956:0:60"
            },
            "scope": 12030,
            "src": "891:110:60",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11928,
              "nodeType": "Block",
              "src": "1076:44:60",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 11924,
                      "name": "allowedAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11859,
                      "src": "1089:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 11926,
                    "indexExpression": {
                      "id": 11925,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11919,
                      "src": "1106:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1089:26:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 11923,
                  "id": 11927,
                  "nodeType": "Return",
                  "src": "1082:33:60"
                }
              ]
            },
            "functionSelector": "8345245e",
            "id": 11929,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAllowedAddress",
            "nameLocation": "1014:16:60",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11919,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1039:8:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 11929,
                  "src": "1031:16:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11918,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1031:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1030:18:60"
            },
            "returnParameters": {
              "id": 11923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11922,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11929,
                  "src": "1070:4:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11921,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1070:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1069:6:60"
            },
            "scope": 12030,
            "src": "1005:115:60",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11936,
              "nodeType": "Block",
              "src": "1243:28:60",
              "statements": [
                {
                  "expression": {
                    "id": 11934,
                    "name": "vaultCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11862,
                    "src": "1256:10:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11933,
                  "id": 11935,
                  "nodeType": "Return",
                  "src": "1249:17:60"
                }
              ]
            },
            "functionSelector": "74d4e491",
            "id": 11937,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVaultCount",
            "nameLocation": "1197:13:60",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11930,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1210:2:60"
            },
            "returnParameters": {
              "id": 11933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11932,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11937,
                  "src": "1234:7:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1234:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1233:9:60"
            },
            "scope": 12030,
            "src": "1188:83:60",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11949,
              "nodeType": "Block",
              "src": "1343:31:60",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 11945,
                      "name": "vaults",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11871,
                      "src": "1356:6:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$11855_storage_$",
                        "typeString": "mapping(uint256 => struct NftFractionsFactoryStorage.Vault storage ref)"
                      }
                    },
                    "id": 11947,
                    "indexExpression": {
                      "id": 11946,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11939,
                      "src": "1363:5:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1356:13:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$11855_storage",
                      "typeString": "struct NftFractionsFactoryStorage.Vault storage ref"
                    }
                  },
                  "functionReturnParameters": 11944,
                  "id": 11948,
                  "nodeType": "Return",
                  "src": "1349:20:60"
                }
              ]
            },
            "functionSelector": "9403b634",
            "id": 11950,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVault",
            "nameLocation": "1284:8:60",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11939,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "1301:5:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 11950,
                  "src": "1293:13:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11938,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1293:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1292:15:60"
            },
            "returnParameters": {
              "id": 11944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11943,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11950,
                  "src": "1329:12:60",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Vault_$11855_memory_ptr",
                    "typeString": "struct NftFractionsFactoryStorage.Vault"
                  },
                  "typeName": {
                    "id": 11942,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11941,
                      "name": "Vault",
                      "nameLocations": [
                        "1329:5:60"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11855,
                      "src": "1329:5:60"
                    },
                    "referencedDeclaration": 11855,
                    "src": "1329:5:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$11855_storage_ptr",
                      "typeString": "struct NftFractionsFactoryStorage.Vault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1328:14:60"
            },
            "scope": 12030,
            "src": "1275:99:60",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11958,
              "nodeType": "Block",
              "src": "1448:37:60",
              "statements": [
                {
                  "expression": {
                    "id": 11956,
                    "name": "tokenAddressCreated",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11865,
                    "src": "1461:19:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 11955,
                  "id": 11957,
                  "nodeType": "Return",
                  "src": "1454:26:60"
                }
              ]
            },
            "functionSelector": "b6bc53e3",
            "id": 11959,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllCreatedVaults",
            "nameLocation": "1387:19:60",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11951,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1406:2:60"
            },
            "returnParameters": {
              "id": 11955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11954,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11959,
                  "src": "1430:16:60",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11952,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1430:7:60",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 11953,
                    "nodeType": "ArrayTypeName",
                    "src": "1430:9:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1429:18:60"
            },
            "scope": 12030,
            "src": "1378:107:60",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11974,
              "nodeType": "Block",
              "src": "1580:43:60",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 11968,
                        "name": "nftToVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11877,
                        "src": "1593:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(uint256 => bool))"
                        }
                      },
                      "id": 11970,
                      "indexExpression": {
                        "id": 11969,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11961,
                        "src": "1604:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1593:18:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                        "typeString": "mapping(uint256 => bool)"
                      }
                    },
                    "id": 11972,
                    "indexExpression": {
                      "id": 11971,
                      "name": "nftId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11963,
                      "src": "1612:5:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1593:25:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 11967,
                  "id": 11973,
                  "nodeType": "Return",
                  "src": "1586:32:60"
                }
              ]
            },
            "functionSelector": "932376fe",
            "id": 11975,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vaultExists",
            "nameLocation": "1498:11:60",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11961,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1523:6:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 11975,
                  "src": "1515:14:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11960,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1515:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11963,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "1543:5:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 11975,
                  "src": "1535:13:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11962,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1535:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1509:43:60"
            },
            "returnParameters": {
              "id": 11967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11966,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11975,
                  "src": "1574:4:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11965,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1574:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1573:6:60"
            },
            "scope": 12030,
            "src": "1489:134:60",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11992,
              "nodeType": "Block",
              "src": "1765:43:60",
              "statements": [
                {
                  "expression": {
                    "id": 11990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 11984,
                          "name": "nftToVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11877,
                          "src": "1771:10:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(uint256 => bool))"
                          }
                        },
                        "id": 11987,
                        "indexExpression": {
                          "id": 11985,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11977,
                          "src": "1782:6:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1771:18:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 11988,
                      "indexExpression": {
                        "id": 11986,
                        "name": "nftId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11979,
                        "src": "1790:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1771:25:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 11989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1799:4:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1771:32:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11991,
                  "nodeType": "ExpressionStatement",
                  "src": "1771:32:60"
                }
              ]
            },
            "functionSelector": "8c7eaf17",
            "id": 11993,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11982,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11981,
                  "name": "onlyAllowed",
                  "nameLocations": [
                    "1753:11:60"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11889,
                  "src": "1753:11:60"
                },
                "nodeType": "ModifierInvocation",
                "src": "1753:11:60"
              }
            ],
            "name": "setVaultExists",
            "nameLocation": "1700:14:60",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11977,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1723:6:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 11993,
                  "src": "1715:14:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11976,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1715:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11979,
                  "mutability": "mutable",
                  "name": "nftId",
                  "nameLocation": "1739:5:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 11993,
                  "src": "1731:13:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11978,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1731:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1714:31:60"
            },
            "returnParameters": {
              "id": 11983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1765:0:60"
            },
            "scope": 12030,
            "src": "1691:117:60",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12014,
              "nodeType": "Block",
              "src": "1883:73:60",
              "statements": [
                {
                  "expression": {
                    "id": 12009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 12002,
                        "name": "vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11871,
                        "src": "1889:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$11855_storage_$",
                          "typeString": "mapping(uint256 => struct NftFractionsFactoryStorage.Vault storage ref)"
                        }
                      },
                      "id": 12004,
                      "indexExpression": {
                        "id": 12003,
                        "name": "vaultCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11862,
                        "src": "1896:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1889:18:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$11855_storage",
                        "typeString": "struct NftFractionsFactoryStorage.Vault storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 12006,
                          "name": "_vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11995,
                          "src": "1916:6:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 12007,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11997,
                          "src": "1924:8:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 12005,
                        "name": "Vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11855,
                        "src": "1910:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Vault_$11855_storage_ptr_$",
                          "typeString": "type(struct NftFractionsFactoryStorage.Vault storage pointer)"
                        }
                      },
                      "id": 12008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1910:23:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$11855_memory_ptr",
                        "typeString": "struct NftFractionsFactoryStorage.Vault memory"
                      }
                    },
                    "src": "1889:44:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$11855_storage",
                      "typeString": "struct NftFractionsFactoryStorage.Vault storage ref"
                    }
                  },
                  "id": 12010,
                  "nodeType": "ExpressionStatement",
                  "src": "1889:44:60"
                },
                {
                  "expression": {
                    "id": 12012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1939:12:60",
                    "subExpression": {
                      "id": 12011,
                      "name": "vaultCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11862,
                      "src": "1939:10:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12013,
                  "nodeType": "ExpressionStatement",
                  "src": "1939:12:60"
                }
              ]
            },
            "functionSelector": "36f61bd9",
            "id": 12015,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12000,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11999,
                  "name": "onlyAllowed",
                  "nameLocations": [
                    "1871:11:60"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11889,
                  "src": "1871:11:60"
                },
                "nodeType": "ModifierInvocation",
                "src": "1871:11:60"
              }
            ],
            "name": "setVault",
            "nameLocation": "1821:8:60",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11995,
                  "mutability": "mutable",
                  "name": "_vault",
                  "nameLocation": "1838:6:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 12015,
                  "src": "1830:14:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11994,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1830:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11997,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1854:8:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 12015,
                  "src": "1846:16:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11996,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1846:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1829:34:60"
            },
            "returnParameters": {
              "id": 12001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1883:0:60"
            },
            "scope": 12030,
            "src": "1812:144:60",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12028,
              "nodeType": "Block",
              "src": "2028:43:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12025,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12017,
                        "src": "2059:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 12022,
                        "name": "tokenAddressCreated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11865,
                        "src": "2034:19:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 12024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2054:4:60",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2034:24:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 12026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2034:32:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12027,
                  "nodeType": "ExpressionStatement",
                  "src": "2034:32:60"
                }
              ]
            },
            "functionSelector": "00f310c3",
            "id": 12029,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12020,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12019,
                  "name": "onlyAllowed",
                  "nameLocations": [
                    "2016:11:60"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11889,
                  "src": "2016:11:60"
                },
                "nodeType": "ModifierInvocation",
                "src": "2016:11:60"
              }
            ],
            "name": "pushTokenAddressCreated",
            "nameLocation": "1969:23:60",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12017,
                  "mutability": "mutable",
                  "name": "_vault",
                  "nameLocation": "2001:6:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 12029,
                  "src": "1993:14:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12016,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1993:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1992:16:60"
            },
            "returnParameters": {
              "id": 12021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2028:0:60"
            },
            "scope": 12030,
            "src": "1960:111:60",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 12031,
        "src": "109:1964:60",
        "usedErrors": []
      }
    ],
    "src": "31:2043:60"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {
    "80001": {
      "events": {},
      "links": {},
      "address": "0xCA64545F802e80dc2E59D71cA366BC9f2cC48873",
      "transactionHash": "0x73726eb2194186bf6f84cb57086caaa57890649f0af144a7b6dbe39318d69a00"
    }
  },
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-07-05T11:46:44.020Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "vaultCount()": {
        "notice": "the number of ERC721 vaults"
      },
      "vaults(uint256)": {
        "notice": "the mapping of vault number to vault contract"
      }
    },
    "version": 1
  }
}